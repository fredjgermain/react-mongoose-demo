[{"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\index.js":"1","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\App.js":"2","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reportWebVitals.js":"3","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\menu.components.js":"4","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\admin.page.tsx":"5","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\home.page.tsx":"6","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\nav\\nav.component.tsx":"7","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\input.utils.ts":"8","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\inputarray\\inputarray.component.tsx":"9","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\inputarray\\inputarray.hook.tsx":"10","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\experiments.tsx":"11","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\_utils.ts":"12","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\_input.ts":"13","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\htmlelement.utils.ts":"14","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\arrays.utils.ts":"15","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\valuetypetesting.utils.ts":"16","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\input\\input.component.tsx":"17","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\inputarray\\readarray.component.tsx":"18","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\select\\select.component.tsx":"19","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\select\\select.hook.tsx":"20","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\select\\selectheader.component.tsx":"21","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\select\\RemovableItems.component.tsx":"22","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\select\\options.component.tsx":"23","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\field\\field.class.ts":"24","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\testinputs.tsx":"25","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\testinputarrays.tsx":"26","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\testIsNull.tsx":"27","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\testarrayutils.tsx":"28","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\objx\\_objx.ts":"29","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\objx\\objx.component.tsx":"30","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\objx\\fields.components.tsx":"31","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\useloader\\_useloader.ts":"32","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\useloader\\useloader.hook.tsx":"33","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\_mongooseparser.ts":"34","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\mongooseaxios.ts":"35","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\crudaxios.ts":"36","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\mongooseparser.utils.ts":"37","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\patient.page.tsx":"38","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\components\\patientheader.component.tsx":"39","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\components\\patientidentifier.component.tsx":"40","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\components\\patientinfos.component.tsx":"41","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\components\\patientsloader.component.tsx":"42","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\questionnaire\\components\\questionnaireloader.component.tsx":"43","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\questionnaire\\components\\questionnaireforms.component.tsx":"44","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\questionnaire\\questionnairepage.page.tsx":"45","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\arrx\\_arrx.ts":"46","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\arrx\\arrx.component.tsx":"47","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\testArrx.tsx":"48","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\testarrx.tsx":"49","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\arrx2\\_arrx.ts":"50","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\arrx2\\arrx.component.tsx":"51","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\arrx2\\arrx.hook.ts":"52","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\objx2\\_objx.ts":"53","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\objx2\\objx.component.tsx":"54","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\objx2\\objx.hook.ts":"55"},{"size":600,"mtime":1609529670659,"results":"56","hashOfConfig":"57"},{"size":684,"mtime":1610046902090,"results":"58","hashOfConfig":"57"},{"size":362,"mtime":499162500000,"results":"59","hashOfConfig":"57"},{"size":225,"mtime":1609475507334,"results":"60","hashOfConfig":"57"},{"size":119,"mtime":1609476074144,"results":"61","hashOfConfig":"57"},{"size":117,"mtime":1609476049273,"results":"62","hashOfConfig":"57"},{"size":496,"mtime":1609883323259,"results":"63","hashOfConfig":"57"},{"size":1628,"mtime":1609534858379,"results":"64","hashOfConfig":"57"},{"size":2724,"mtime":1610053638536,"results":"65","hashOfConfig":"57"},{"size":970,"mtime":1609787735783,"results":"66","hashOfConfig":"57"},{"size":610,"mtime":1610055634366,"results":"67","hashOfConfig":"57"},{"size":579,"mtime":1609805717773,"results":"68","hashOfConfig":"57"},{"size":643,"mtime":1609791814153,"results":"69","hashOfConfig":"57"},{"size":1457,"mtime":1609795211769,"results":"70","hashOfConfig":"57"},{"size":3330,"mtime":1609805687249,"results":"71","hashOfConfig":"57"},{"size":348,"mtime":1609796212159,"results":"72","hashOfConfig":"57"},{"size":2032,"mtime":1609795456015,"results":"73","hashOfConfig":"57"},{"size":489,"mtime":1609790785285,"results":"74","hashOfConfig":"57"},{"size":1566,"mtime":1609790444636,"results":"75","hashOfConfig":"57"},{"size":2171,"mtime":1609983093189,"results":"76","hashOfConfig":"57"},{"size":1110,"mtime":1609787735863,"results":"77","hashOfConfig":"57"},{"size":497,"mtime":1609787735852,"results":"78","hashOfConfig":"57"},{"size":1025,"mtime":1609790418274,"results":"79","hashOfConfig":"57"},{"size":2351,"mtime":1609452679027,"results":"80","hashOfConfig":"57"},{"size":842,"mtime":1609794966770,"results":"81","hashOfConfig":"57"},{"size":1151,"mtime":1609795352133,"results":"82","hashOfConfig":"57"},{"size":776,"mtime":1609796410662,"results":"83","hashOfConfig":"57"},{"size":1238,"mtime":1609805930810,"results":"84","hashOfConfig":"57"},{"size":223,"mtime":1609788148850,"results":"85","hashOfConfig":"57"},{"size":478,"mtime":1609452679078,"results":"86","hashOfConfig":"57"},{"size":1420,"mtime":1609976051100,"results":"87","hashOfConfig":"57"},{"size":98,"mtime":1609788148795,"results":"88","hashOfConfig":"57"},{"size":1301,"mtime":1609804782791,"results":"89","hashOfConfig":"57"},{"size":329,"mtime":1609788021109,"results":"90","hashOfConfig":"57"},{"size":1819,"mtime":1609452679070,"results":"91","hashOfConfig":"57"},{"size":1608,"mtime":1609452679069,"results":"92","hashOfConfig":"57"},{"size":2252,"mtime":1609452679073,"results":"93","hashOfConfig":"57"},{"size":2239,"mtime":1609979770974,"results":"94","hashOfConfig":"57"},{"size":222,"mtime":1609965015785,"results":"95","hashOfConfig":"57"},{"size":908,"mtime":1609891033736,"results":"96","hashOfConfig":"57"},{"size":1601,"mtime":1609893388314,"results":"97","hashOfConfig":"57"},{"size":1383,"mtime":1609974282355,"results":"98","hashOfConfig":"57"},{"size":1663,"mtime":1609979895800,"results":"99","hashOfConfig":"57"},{"size":4453,"mtime":1610045105523,"results":"100","hashOfConfig":"57"},{"size":1134,"mtime":1609979572737,"results":"101","hashOfConfig":"57"},{"size":133,"mtime":1609978711077,"results":"102","hashOfConfig":"57"},{"size":1460,"mtime":1609983161743,"results":"103","hashOfConfig":"57"},{"size":2449,"mtime":1610062912048,"results":"104","hashOfConfig":"57"},{"size":2449,"mtime":1610062912048,"results":"105","hashOfConfig":"57"},{"size":302,"mtime":1610060231738,"results":"106","hashOfConfig":"57"},{"size":3366,"mtime":1610059935055,"results":"107","hashOfConfig":"57"},{"size":1377,"mtime":1610056349191,"results":"108","hashOfConfig":"57"},{"size":210,"mtime":1610060070186,"results":"109","hashOfConfig":"57"},{"size":2282,"mtime":1610060890458,"results":"110","hashOfConfig":"57"},{"size":657,"mtime":1610058851968,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"ke513i",{"filePath":"115","messages":"116","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"123"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"123"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"123"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"123"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"123"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"123"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"123"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"123"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\index.js",[],["233","234"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\App.js",["235","236","237","238","239","240"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reportWebVitals.js",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\menu.components.js",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\admin.page.tsx",[],["241","242"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\home.page.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\nav\\nav.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\input.utils.ts",[],["243","244"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\inputarray\\inputarray.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\inputarray\\inputarray.hook.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\experiments.tsx",["245","246","247","248","249","250"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\_utils.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\_input.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\htmlelement.utils.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\arrays.utils.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\valuetypetesting.utils.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\input\\input.component.tsx",["251"],"import React from 'react'; \r\nimport {IEvent, IsNull, GetValueFromInput} from '../../utils/_utils'; \r\n\r\n\r\n// INPUT ========================================\r\nexport interface IInput extends React.HTMLAttributes<HTMLInputElement> { \r\n  value:any; \r\n  setValue:any; \r\n  defaultValue:any; \r\n  type?:string; \r\n  inputType?:string; \r\n  //[key:string]:any; \r\n} \r\nexport function Input({value, setValue, defaultValue, type=(typeof value), inputType, ...props}:IInput) { \r\n  const OnChange = (event:IEvent) => setValue(GetInputValueOrDefault(event, defaultValue)); \r\n  //const InputType = GetInputType(type, inputType); \r\n  const Value = IsNull(value) ? defaultValue: value; \r\n\r\n  if(type === 'string') \r\n    return <input type={'text'} value={Value} onChange={OnChange} {...props} /> \r\n  if(type === 'number') \r\n    return <input type={'number'} value={Value} onChange={OnChange} {...props} /> \r\n  if(type === 'boolean') \r\n    return <input type={'checkbox'} checked={Value} onChange={OnChange} {...props} /> \r\n  return <span>{JSON.stringify(value)}</span> \r\n} \r\n\r\n\r\n// GetValue --------------------------------------\r\nfunction GetInputValueOrDefault (event:IEvent, defaultValue:any) { \r\n  const value = GetValueFromInput(event); \r\n  return IsNull(value) ? defaultValue: value; \r\n}\r\n\r\n\r\n/* Get Value From Input\r\n  - Get correct value type (string, number, date, or boolean) from input element. */\r\n/*function GetValueFromInput(event:IEvent, type:string):any { \r\n  if(type === 'number') \r\n    return event.target.valueAsNumber as number; \r\n  if(type === 'date') \r\n    return event.target.valueAsDate; \r\n  if(type === 'boolean') \r\n    return event.target.checked as boolean; \r\n  return event.target.value; \r\n}*/\r\n\r\n// GetInputType ---------------------------------\r\nfunction GetInputType(type:string, inputType?:string) { \r\n  if(!inputType) \r\n    return inputType; \r\n  \r\n  if(type === 'number') \r\n    return 'number'; \r\n  if(type === 'boolean') \r\n    return 'checkbox'; \r\n  if(type === 'string') \r\n    return 'text'; \r\n  return 'text'; \r\n}\r\n\r\n","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\inputarray\\readarray.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\select\\select.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\select\\select.hook.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\select\\selectheader.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\select\\RemovableItems.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\select\\options.component.tsx",["252"],"import React, {useContext, useEffect} from 'react'; \r\n//import {IOption} from '../../reusable/_input'; \r\nimport {SelectContext} from './select.component'; \r\n\r\n\r\n// OPTIONS ======================================\r\ninterface IOptions { \r\n  label?:string; // defines a optgroup with a label \r\n  options:IOption[]; \r\n  [key:string]:any; \r\n} \r\n//const OptionsContext = React.createContext({}); \r\nexport function Options({label, options}:IOptions) { \r\n  const {setOptions} = useContext(SelectContext); \r\n  \r\n  useEffect(() => { \r\n    setOptions( (prev:any) => [...prev, ...options] ); \r\n  }, []); \r\n\r\n  return <div > \r\n    {label ? (<div className={'select_body_label'}>{label}</div>) : null} \r\n    {options.map( (option,i) => { \r\n      return <Option key={i} option={option} /> \r\n    })} \r\n  </div> \r\n} \r\n\r\nfunction Option({option}:{option:IOption}) { \r\n  const {SelectValue} = useContext(SelectContext); \r\n  return <div className={'select_body_option'} onClick={() => SelectValue(option.value)}> \r\n    {option.label} \r\n  </div>\r\n}","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\field\\field.class.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\testinputs.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\testinputarrays.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\testIsNull.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\testarrayutils.tsx",["253","254","255"],"import React from 'react'; \r\nimport {Filter, Combine, Duplicates, IsEmpty, CommonPredicates, Order} from '../../reusable/utils/_utils'; \r\nconst {ByIndexes, Intersect, Exclusion, Compare} = CommonPredicates; \r\n\r\n\r\n// EXPERIMENTS ==================================\r\nexport function TestArrayUtils() { \r\n  const strings = [{name:'a'}, {name:'b'}, {name:'b'}, {name:'c'}, {name:'d'}, {name:'e'}, {name:'d'}]; \r\n  const ordering = ['e','a', 'c']; \r\n  const intersect = ['a','b','d']; \r\n\r\n  const intersects = Filter(ordering, Intersect(intersect)); \r\n  const exclusions = Filter(ordering, Exclusion(intersect)); \r\n  const ordered = Order(strings, ordering, (a:any, b:any) => a['name']===b ); \r\n\r\n  const combine = Combine(ordering, strings, (a,b) => a===b.name).map(([a,b]) => b); \r\n\r\n  const test = Filter(strings, ByIndexes([5,4,1])); \r\n\r\n  const {duplicates, unics} = Duplicates(strings, (a:any, b:any) => JSON.stringify(a) === JSON.stringify(b) ); \r\n\r\n  return <div> \r\n    {JSON.stringify(duplicates)} \r\n    <br/>\r\n    {JSON.stringify(unics)} \r\n    <br/>\r\n    {JSON.stringify(test)} \r\n    <br/>\r\n    {JSON.stringify(intersects)} \r\n    <br/>\r\n    {JSON.stringify(exclusions)} \r\n    <br/>\r\n    {JSON.stringify(ordered)} \r\n  </div> \r\n} \r\n\r\n\r\n","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\objx\\_objx.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\objx\\objx.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\objx\\fields.components.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\useloader\\_useloader.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\useloader\\useloader.hook.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\_mongooseparser.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\mongooseaxios.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\crudaxios.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\mongooseparser.utils.ts",["256"],"export interface IMongooseModel { \r\n  accessor:string; \r\n  label:string; \r\n  fields: IMongooseField[]; \r\n  entries: IEntry[]; \r\n} \r\n\r\nexport interface IMongooseField { \r\n  path:string;  // accessor \r\n  instance:string; \r\n  validators: any; \r\n  options: { \r\n    ref?: string; \r\n    label?: string; \r\n    sortType?: string; \r\n    defaultValue?: any; \r\n    format?: string; \r\n    [key:string]:any; \r\n  }; \r\n  $embeddedSchemaType?:{ \r\n    instance:string; \r\n  }; \r\n  [key:string]:any; \r\n} \r\n\r\n\r\nexport function ParseCollection(model:any):ICollection { \r\n  const accessor = model['accessor']; \r\n  const label = model['label']; \r\n  const ifields = ParseFields(model['fields']); \r\n  const entries = model['entries']; \r\n  return {accessor, label, ifields, entries}; \r\n} \r\n\r\nexport function ParseFields(fields:any):IField[] { \r\n  const mongooseFields:IMongooseField[] = Object.keys(fields).map(f => fields[f]); \r\n  return mongooseFields.map(f=>ParseField(f)); \r\n} \r\n\r\n//async function ParseFields() \r\nexport function ParseField(field:IMongooseField):IField { \r\n  const {path, instance, options} = field; \r\n  const ifield:IField = {} as IField; \r\n  ifield.accessor = path; \r\n  ifield.label = options.label ?? ''; \r\n  ifield.options = options; \r\n  ifield.type = GetType(field); \r\n  ifield.enums = options['enum'] ?? []; \r\n  ifield.format = options.format ?? \"${value}\"; \r\n  ifield.sort = options.sortType ?? ''; \r\n  ifield.defaultValue = GetDefaultValue(ifield.type, ifield.options); \r\n  \r\n  ifield.isEnum = options['enum']? true: false; \r\n  ifield.isArray = instance.toLowerCase() === 'array'; \r\n  ifield.isModel = instance.toLowerCase() === 'objectid'; \r\n  //ifield.isMixed = \r\n  //ifield.validators = \r\n  return ifield; \r\n} \r\n\r\nfunction GetType({instance, $embeddedSchemaType}:IMongooseField) { \r\n  if(instance.toLocaleLowerCase() === 'array') \r\n    return ($embeddedSchemaType?.instance ?? '').toLocaleLowerCase(); \r\n  return instance.toLocaleLowerCase(); \r\n} \r\n\r\nfunction GetDefaultValue(type:string, options:any):any { \r\n  if(options['defaultValue']) \r\n    return options['defaultValue']; \r\n  if(options['default']) \r\n    return options['default']; \r\n  if(type === 'boolean') \r\n    return false; \r\n  if(type === 'number') \r\n    return 0; \r\n  return ''; \r\n} ","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\patient.page.tsx",["257"],"import React, {useState} from 'react'; \r\nimport {CrudMongoose} from '../../reusable/mongooseparser/_mongooseparser'; \r\nimport {IsNull, IsEmpty} from '../../reusable/utils/_utils'; \r\n\r\nimport {PatientHeader} from './components/patientheader.component'; \r\nimport {PatientsLoader} from './components/patientsloader.component'; \r\nimport {PatientIdentifier} from './components/patientidentifier.component'; \r\nimport {PatientInfos} from './components/patientinfos.component'; \r\nimport QuestionnairePage from '../questionnaire/questionnairepage.page';\r\n\r\n/*import {QuestionnaireLoader} from './components/questionnaireloader.component'; \r\nimport {Questionnaire} from './components/questionnaire.component'; */\r\n\r\ninterface IPatientContext { \r\n  patients:ICollection; \r\n  setPatients:any; \r\n\r\n  patient:IEntry; \r\n  setPatient:any; \r\n\r\n  patientUpdated:boolean; \r\n  setPatientUpdated:any; \r\n} \r\n// PATIENT ======================================\r\nexport const PatientContext = React.createContext({} as IPatientContext); \r\nexport const CrudContext = React.createContext({} as {crud:CrudMongoose});\r\n\r\nexport default function Patient() { \r\n  const crud = new CrudMongoose(`https://fjg-mongoose-heroku.herokuapp.com/api/`); \r\n  const [patient, setPatient] = useState<IEntry>({} as IEntry); \r\n  const [patientUpdated, setPatientUpdated] = useState(false); \r\n  const [patients, setPatients] = useState({} as ICollection); \r\n  \r\n  const context = {crud, patients, setPatients, \r\n    patient, setPatient, \r\n    patientUpdated, setPatientUpdated} as IPatientContext; \r\n\r\n  if(!patientUpdated) \r\n    return <div> \r\n      <CrudContext.Provider value={{crud}} >\r\n        <PatientContext.Provider value={context} > \r\n          <PatientHeader /> \r\n          {IsEmpty(patients) && <PatientsLoader/>} \r\n          {!IsEmpty(patients) && IsEmpty(patient) && <PatientIdentifier/>} \r\n          {!IsEmpty(patients) && !IsEmpty(patient) && <PatientInfos/>} \r\n        </PatientContext.Provider> \r\n      </CrudContext.Provider>\r\n    </div> \r\n\r\n  return <div> \r\n    <CrudContext.Provider value={{crud}} >\r\n      <PatientContext.Provider value={context} > \r\n        <QuestionnairePage/> \r\n      </PatientContext.Provider> \r\n    </CrudContext.Provider>\r\n  </div>  \r\n} \r\n\r\n\r\n","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\components\\patientheader.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\components\\patientidentifier.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\components\\patientinfos.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\components\\patientsloader.component.tsx",["258"],"import {useContext, useEffect} from 'react'; \r\nimport {useLoader} from '../../../reusable/useloader/_useloader'; \r\n\r\nimport {CrudContext, PatientContext} from '../patient.page'; \r\n\r\n\r\n// PatientsCollectionLoader ===================== \r\nexport function PatientsLoader() { \r\n  const {crud} = useContext(CrudContext); \r\n  const {setPatients} = useContext(PatientContext); \r\n  const {state, Load} = useLoader(); \r\n\r\n  const loadfunc = async () => { \r\n    const response:IResponse = await crud.Collection('patients'); \r\n    if(response.success) \r\n      setPatients(() => response.data as ICollection); \r\n  }; \r\n\r\n  useEffect(() => {Load(loadfunc)}, []); \r\n\r\n\r\n  /* ?????? TO ADD IN USELOADER ??????\r\n  function Component(props) {\r\n    const [fetched, setFetched] = React.useState(false);\r\n    React.useEffect(() => {\r\n      const ac = new AbortController();\r\n      Promise.all([\r\n        fetch('http://placekitten.com/1000/1000', {signal: ac.signal}),\r\n        fetch('http://placekitten.com/2000/2000', {signal: ac.signal})\r\n      ]).then(() => setFetched(true))\r\n        .catch(ex => console.error(ex));\r\n      return () => ac.abort(); // Abort both fetches on unmount\r\n    }, []);\r\n    return fetched;\r\n  }\r\n  */\r\n\r\n  if(!state.ready) \r\n    return <div> Loading ... </div> \r\n  if(state.ready && !state.success) \r\n    return <div> Oh no! An error occured ... </div> \r\n  return null; \r\n} ","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\questionnaire\\components\\questionnaireloader.component.tsx",["259"],"import {useEffect, useContext} from 'react'; \r\nimport {useLoader} from '../../../reusable/useloader/_useloader'; \r\nimport {CrudContext} from '../../patient/patient.page';\r\nimport {QuestionnaireContext} from '../questionnairepage.page';\r\n\r\n\r\n\r\n// PatientsCollectionLoader ===================== \r\nexport function QuestionnaireLoader() { \r\n  const {crud} = useContext(CrudContext); \r\n\r\n  const {setQuestions, setResponses} = useContext(QuestionnaireContext); \r\n  const {state, Load} = useLoader(); \r\n\r\n  const loadfunc = async () => { \r\n    const questions:IResponse = await crud.Collection('questions'); \r\n    if(questions.success) \r\n      setQuestions(() => questions.data as ICollection); \r\n    console.log(questions);\r\n\r\n    const responses:IResponse = await crud.Collection('responses'); \r\n    if(responses.success) \r\n      setResponses(() => responses.data as ICollection); \r\n  }; \r\n\r\n  useEffect(() => {Load(loadfunc)}, []); \r\n\r\n\r\n  /* ?????? TO ADD IN USELOADER ??????\r\n  function Component(props) {\r\n    const [fetched, setFetched] = React.useState(false);\r\n    React.useEffect(() => {\r\n      const ac = new AbortController();\r\n      Promise.all([\r\n        fetch('http://placekitten.com/1000/1000', {signal: ac.signal}),\r\n        fetch('http://placekitten.com/2000/2000', {signal: ac.signal})\r\n      ]).then(() => setFetched(true))\r\n        .catch(ex => console.error(ex));\r\n      return () => ac.abort(); // Abort both fetches on unmount\r\n    }, []);\r\n    return fetched;\r\n  }\r\n  */\r\n\r\n  if(!state.ready) \r\n    return <div> Loading ... </div> \r\n  if(state.ready && !state.success) \r\n    return <div> Oh no! An error occured ... </div> \r\n  return null; \r\n} ","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\questionnaire\\components\\questionnaireforms.component.tsx",["260","261","262","263","264","265","266","267","268","269","270","271","272","273","274"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\questionnaire\\questionnairepage.page.tsx",["275"],"import React, {useState} from 'react'; \r\nimport { CrudMongoose } from '../../reusable/mongooseparser/mongooseaxios';\r\nimport { IsEmpty } from '../../reusable/utils/_utils';\r\nimport { QuestionnaireLoader } from './components/questionnaireloader.component';\r\nimport { Questionnaire } from './components/questionnaireforms.component';\r\n\r\ninterface IQuestionnaireContext { \r\n  questions:ICollection; \r\n  setQuestions:any; \r\n  responses: ICollection; \r\n  setResponses: any; \r\n} \r\n\r\nexport const QuestionnaireContext = React.createContext({} as IQuestionnaireContext); \r\nexport default function QuestionnairePage() { \r\n  const [questions, setQuestions] = useState({} as ICollection); \r\n  const [responses, setResponses] = useState({} as ICollection); \r\n\r\n  const context = {questions, setQuestions, responses, setResponses}; \r\n  return <div> \r\n    <QuestionnaireContext.Provider value={context}> \r\n      <h1>Questionnaire</h1>\r\n      {(IsEmpty(questions) || IsEmpty(responses)) && <QuestionnaireLoader /> } \r\n      {!(IsEmpty(questions) || IsEmpty(responses)) && <Questionnaire /> } \r\n    </QuestionnaireContext.Provider> \r\n  </div> \r\n}\r\n\r\n","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\arrx\\_arrx.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\arrx\\arrx.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\testArrx.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\testarrx.tsx",["276","277","278","279","280"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\arrx2\\_arrx.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\arrx2\\arrx.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\arrx2\\arrx.hook.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\objx2\\_objx.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\objx2\\objx.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\objx2\\objx.hook.ts",[],{"ruleId":"281","replacedBy":"282"},{"ruleId":"283","replacedBy":"284"},{"ruleId":"285","severity":1,"message":"286","line":2,"column":9,"nodeType":"287","messageId":"288","endLine":2,"endColumn":15},{"ruleId":"285","severity":1,"message":"289","line":2,"column":17,"nodeType":"287","messageId":"288","endLine":2,"endColumn":22},{"ruleId":"285","severity":1,"message":"290","line":3,"column":8,"nodeType":"287","messageId":"288","endLine":3,"endColumn":11},{"ruleId":"285","severity":1,"message":"291","line":4,"column":8,"nodeType":"287","messageId":"288","endLine":4,"endColumn":12},{"ruleId":"285","severity":1,"message":"292","line":5,"column":8,"nodeType":"287","messageId":"288","endLine":5,"endColumn":15},{"ruleId":"285","severity":1,"message":"293","line":6,"column":8,"nodeType":"287","messageId":"288","endLine":6,"endColumn":13},{"ruleId":"281","replacedBy":"282"},{"ruleId":"283","replacedBy":"284"},{"ruleId":"281","replacedBy":"294"},{"ruleId":"283","replacedBy":"295"},{"ruleId":"296","severity":1,"message":"297","line":2,"column":9,"nodeType":"287","messageId":"288","endLine":2,"endColumn":19},{"ruleId":"296","severity":1,"message":"298","line":3,"column":9,"nodeType":"287","messageId":"288","endLine":3,"endColumn":24},{"ruleId":"296","severity":1,"message":"299","line":4,"column":9,"nodeType":"287","messageId":"288","endLine":4,"endColumn":20},{"ruleId":"296","severity":1,"message":"300","line":5,"column":9,"nodeType":"287","messageId":"288","endLine":5,"endColumn":19},{"ruleId":"296","severity":1,"message":"301","line":6,"column":9,"nodeType":"287","messageId":"288","endLine":6,"endColumn":23},{"ruleId":"296","severity":1,"message":"302","line":14,"column":9,"nodeType":"287","messageId":"288","endLine":14,"endColumn":12},{"ruleId":"296","severity":1,"message":"303","line":49,"column":10,"nodeType":"287","messageId":"288","endLine":49,"endColumn":22},{"ruleId":"304","severity":1,"message":"305","line":18,"column":6,"nodeType":"306","endLine":18,"endColumn":8,"suggestions":"307"},{"ruleId":"296","severity":1,"message":"308","line":2,"column":38,"nodeType":"287","messageId":"288","endLine":2,"endColumn":45},{"ruleId":"296","severity":1,"message":"309","line":3,"column":41,"nodeType":"287","messageId":"288","endLine":3,"endColumn":48},{"ruleId":"296","severity":1,"message":"310","line":16,"column":9,"nodeType":"287","messageId":"288","endLine":16,"endColumn":16},{"ruleId":"311","severity":1,"message":"312","line":49,"column":37,"nodeType":"313","messageId":"314","endLine":49,"endColumn":47},{"ruleId":"296","severity":1,"message":"315","line":3,"column":9,"nodeType":"287","messageId":"288","endLine":3,"endColumn":15},{"ruleId":"304","severity":1,"message":"316","line":18,"column":37,"nodeType":"306","endLine":18,"endColumn":39,"suggestions":"317"},{"ruleId":"304","severity":1,"message":"316","line":26,"column":37,"nodeType":"306","endLine":26,"endColumn":39,"suggestions":"318"},{"ruleId":"296","severity":1,"message":"319","line":2,"column":9,"nodeType":"287","messageId":"288","endLine":2,"endColumn":13},{"ruleId":"296","severity":1,"message":"320","line":2,"column":15,"nodeType":"287","messageId":"288","endLine":2,"endColumn":26},{"ruleId":"296","severity":1,"message":"321","line":2,"column":28,"nodeType":"287","messageId":"288","endLine":2,"endColumn":34},{"ruleId":"296","severity":1,"message":"322","line":2,"column":36,"nodeType":"287","messageId":"288","endLine":2,"endColumn":46},{"ruleId":"296","severity":1,"message":"323","line":2,"column":48,"nodeType":"287","messageId":"288","endLine":2,"endColumn":60},{"ruleId":"296","severity":1,"message":"324","line":2,"column":62,"nodeType":"287","messageId":"288","endLine":2,"endColumn":72},{"ruleId":"296","severity":1,"message":"325","line":3,"column":26,"nodeType":"287","messageId":"288","endLine":3,"endColumn":36},{"ruleId":"296","severity":1,"message":"326","line":6,"column":15,"nodeType":"287","messageId":"288","endLine":6,"endColumn":22},{"ruleId":"296","severity":1,"message":"327","line":6,"column":24,"nodeType":"287","messageId":"288","endLine":6,"endColumn":35},{"ruleId":"296","severity":1,"message":"328","line":25,"column":10,"nodeType":"287","messageId":"288","endLine":25,"endColumn":14},{"ruleId":"296","severity":1,"message":"329","line":71,"column":18,"nodeType":"287","messageId":"288","endLine":71,"endColumn":24},{"ruleId":"296","severity":1,"message":"330","line":77,"column":17,"nodeType":"287","messageId":"288","endLine":77,"endColumn":25},{"ruleId":"296","severity":1,"message":"331","line":77,"column":27,"nodeType":"287","messageId":"288","endLine":77,"endColumn":32},{"ruleId":"296","severity":1,"message":"332","line":78,"column":10,"nodeType":"287","messageId":"288","endLine":78,"endColumn":22},{"ruleId":"296","severity":1,"message":"331","line":87,"column":27,"nodeType":"287","messageId":"288","endLine":87,"endColumn":32},{"ruleId":"296","severity":1,"message":"333","line":2,"column":10,"nodeType":"287","messageId":"288","endLine":2,"endColumn":22},{"ruleId":"296","severity":1,"message":"326","line":2,"column":38,"nodeType":"287","messageId":"288","endLine":2,"endColumn":45},{"ruleId":"296","severity":1,"message":"320","line":4,"column":15,"nodeType":"287","messageId":"288","endLine":4,"endColumn":26},{"ruleId":"296","severity":1,"message":"334","line":4,"column":36,"nodeType":"287","messageId":"288","endLine":4,"endColumn":41},{"ruleId":"296","severity":1,"message":"323","line":4,"column":43,"nodeType":"287","messageId":"288","endLine":4,"endColumn":55},{"ruleId":"296","severity":1,"message":"335","line":23,"column":9,"nodeType":"287","messageId":"288","endLine":23,"endColumn":13},"no-native-reassign",["336"],"no-negated-in-lhs",["337"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Nav' is defined but never used.","'Home' is defined but never used.","'Patient' is defined but never used.","'Admin' is defined but never used.",["336"],["337"],"@typescript-eslint/no-unused-vars","'TestInputs' is defined but never used.","'TestInputArrays' is defined but never used.","'TestSelects' is defined but never used.","'TestIsNull' is defined but never used.","'TestArrayUtils' is defined but never used.","'arr' is assigned a value but never used.","'GetInputType' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'options' and 'setOptions'. Either include them or remove the dependency array.","ArrayExpression",["338"],"'IsEmpty' is defined but never used.","'Compare' is assigned a value but never used.","'combine' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'IsNull' is defined but never used.","React Hook useEffect has missing dependencies: 'Load' and 'loadfunc'. Either include them or remove the dependency array.",["339"],["340"],"'Objx' is defined but never used.","'ObjxContext' is defined but never used.","'Fields' is defined but never used.","'FieldLabel' is defined but never used.","'FieldContext' is defined but never used.","'FieldValue' is defined but never used.","'InputArray' is defined but never used.","'Element' is defined but never used.","'ArrxContext' is defined but never used.","'crud' is assigned a value but never used.","'answer' is assigned a value but never used.","'setValue' is assigned a value but never used.","'index' is assigned a value but never used.","'responseType' is assigned a value but never used.","'CrudMongoose' is defined but never used.","'Field' is defined but never used.","'test' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"343","fix":"345"},"Update the dependencies array to be: [options, setOptions]",{"range":"346","text":"347"},"Update the dependencies array to be: [Load, loadfunc]",{"range":"348","text":"349"},{"range":"350","text":"349"},[585,587],"[options, setOptions]",[593,595],"[Load, loadfunc]",[924,926]]