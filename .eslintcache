[{"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\index.js":"1","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\App.js":"2","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reportWebVitals.js":"3","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\menu.components.js":"4","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\admin.page.tsx":"5","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\home.page.tsx":"6","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\nav\\nav.component.tsx":"7","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\htmlelement.utils.ts":"8","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\arrays.utils.ts":"9","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\valuetypetesting.utils.ts":"10","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\mongooseaxios.ts":"11","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\mongooseparser.utils.ts":"12","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\arrx\\arrx.component.tsx":"13","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\objx\\objx.component.tsx":"14","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\tablr\\cells.component.tsx":"15","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\tablr\\tablr.component.tsx":"16","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\tablr\\rows.component.tsx":"17","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\tablr\\headers.component.tsx":"18","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\dao\\dao.class.ts":"19","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\dao\\usedao.hook.ts":"20","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\dao\\daocontexter.component.tsx":"21","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\feedback.component.tsx":"22","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_dao.ts":"23","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_mongooseparser.ts":"24","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_utils.ts":"25","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_useloader.ts":"26","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\customhooks\\useloader.hook.tsx":"27","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\toggle\\toggle.component.tsx":"28","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\toggle\\usetoggle.hook.ts":"29","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_usetoggle.ts":"30","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_arrx.ts":"31","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\select\\select.component.tsx":"32","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\select\\select.hook.tsx":"33","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_input.ts":"34","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\input\\input.component.tsx":"35","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\inputarray\\inputarray.component.tsx":"36","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\inputarray\\inputarray.hook.tsx":"37","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_tablr.ts":"38","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_rendering.ts":"39","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\rendering\\renderers.utils.tsx":"40","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\rendering\\valuerenderer.component.tsx":"41","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\valuerenderer.component.tsx":"42","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\crudbtn.component.tsx":"43","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\cellrenderer.component.tsx":"44","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\collectionselector.component.tsx":"45","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\admintablr.component.tsx":"46","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_usepage.ts":"47","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\customhooks\\usepage.tsx":"48"},{"size":600,"mtime":1609529670659,"results":"49","hashOfConfig":"50"},{"size":361,"mtime":1611175661072,"results":"51","hashOfConfig":"50"},{"size":362,"mtime":499162500000,"results":"52","hashOfConfig":"50"},{"size":225,"mtime":1609475507334,"results":"53","hashOfConfig":"50"},{"size":1058,"mtime":1611182348033,"results":"54","hashOfConfig":"50"},{"size":117,"mtime":1609476049273,"results":"55","hashOfConfig":"50"},{"size":496,"mtime":1609883323259,"results":"56","hashOfConfig":"50"},{"size":1433,"mtime":1611094858717,"results":"57","hashOfConfig":"50"},{"size":3330,"mtime":1611094858686,"results":"58","hashOfConfig":"50"},{"size":2003,"mtime":1611094858767,"results":"59","hashOfConfig":"50"},{"size":2205,"mtime":1611094858599,"results":"60","hashOfConfig":"50"},{"size":2204,"mtime":1611094858602,"results":"61","hashOfConfig":"50"},{"size":1704,"mtime":1611107355045,"results":"62","hashOfConfig":"50"},{"size":2188,"mtime":1610833076747,"results":"63","hashOfConfig":"50"},{"size":1473,"mtime":1611094858490,"results":"64","hashOfConfig":"50"},{"size":462,"mtime":1611094858513,"results":"65","hashOfConfig":"50"},{"size":1042,"mtime":1611094858511,"results":"66","hashOfConfig":"50"},{"size":982,"mtime":1611094858504,"results":"67","hashOfConfig":"50"},{"size":6678,"mtime":1611094858584,"results":"68","hashOfConfig":"50"},{"size":3768,"mtime":1611181708970,"results":"69","hashOfConfig":"50"},{"size":425,"mtime":1611094858586,"results":"70","hashOfConfig":"50"},{"size":1139,"mtime":1611095640986,"results":"71","hashOfConfig":"50"},{"size":313,"mtime":1611094858212,"results":"72","hashOfConfig":"50"},{"size":336,"mtime":1611094858220,"results":"73","hashOfConfig":"50"},{"size":775,"mtime":1611094858280,"results":"74","hashOfConfig":"50"},{"size":112,"mtime":1611094858253,"results":"75","hashOfConfig":"50"},{"size":1301,"mtime":1611094858561,"results":"76","hashOfConfig":"50"},{"size":688,"mtime":1611105433287,"results":"77","hashOfConfig":"50"},{"size":1330,"mtime":1611105734495,"results":"78","hashOfConfig":"50"},{"size":124,"mtime":1611105257047,"results":"79","hashOfConfig":"50"},{"size":233,"mtime":1611094858166,"results":"80","hashOfConfig":"50"},{"size":2608,"mtime":1611177463681,"results":"81","hashOfConfig":"50"},{"size":1241,"mtime":1611175973024,"results":"82","hashOfConfig":"50"},{"size":286,"mtime":1611174653734,"results":"83","hashOfConfig":"50"},{"size":1769,"mtime":1611102160553,"results":"84","hashOfConfig":"50"},{"size":2116,"mtime":1611102160553,"results":"85","hashOfConfig":"50"},{"size":943,"mtime":1611094858392,"results":"86","hashOfConfig":"50"},{"size":447,"mtime":1611094858232,"results":"87","hashOfConfig":"50"},{"size":305,"mtime":1611094858229,"results":"88","hashOfConfig":"50"},{"size":4285,"mtime":1611174742401,"results":"89","hashOfConfig":"50"},{"size":1370,"mtime":1611094858649,"results":"90","hashOfConfig":"50"},{"size":1373,"mtime":1611177659474,"results":"91","hashOfConfig":"50"},{"size":2578,"mtime":1611184937526,"results":"92","hashOfConfig":"50"},{"size":1303,"mtime":1611182871600,"results":"93","hashOfConfig":"50"},{"size":500,"mtime":1611182248863,"results":"94","hashOfConfig":"50"},{"size":2437,"mtime":1611185647971,"results":"95","hashOfConfig":"50"},{"size":107,"mtime":1611094858263,"results":"96","hashOfConfig":"50"},{"size":2692,"mtime":1611185387054,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"ke513i",{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"117"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"117"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"117"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"117"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"117"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"117"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"117"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\index.js",[],["207","208"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\App.js",["209"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reportWebVitals.js",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\menu.components.js",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\admin.page.tsx",["210"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\home.page.tsx",[],["211","212"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\nav\\nav.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\htmlelement.utils.ts",["213"],"import React from 'react'; \r\nimport {IsNull} from '../_utils'; \r\n\r\n// IEvent #####################################\r\nexport interface IEvent extends React.ChangeEvent<HTMLInputElement> { \r\n  code?:any, \r\n  [key:string]:any, \r\n} \r\n\r\nexport function OnEnter(event:any, Func:any) { \r\n  if(IsPressEnter( (event as IEvent).code ) ) \r\n    Func(); \r\n} \r\n\r\n\r\n\r\n// Get Value From Input -------------------------\r\nexport function GetValueFromInput(event:IEvent) { \r\n  const target = event.target; \r\n  const type = target.type; \r\n  if(type === 'number') \r\n    return target.valueAsNumber as number; \r\n  if(type === 'date') \r\n    return target.valueAsDate; \r\n  if(type === 'checkbox') \r\n    return target.checked as boolean; \r\n  return target.value; \r\n} \r\n\r\n\r\n// GetInputType ---------------------------------\r\nexport function GetInputType(type:string) { \r\n  if(type === 'number') \r\n    return 'number'; \r\n  if(type === 'boolean') \r\n    return 'checkbox'; \r\n  if(type === 'string') \r\n    return 'text'; \r\n  return 'text'; \r\n}\r\n\r\n\r\n// If Code is pressEnter\r\nexport function IsPressEnter(code:string = ''):boolean { \r\n  return code === 'Enter' || code === 'NumpadEnter'; \r\n} \r\n\r\n\r\n// TAG UTILS ###################################\r\nexport function SetWidth(value:number):{width:any} {\r\n  return {width:`${SetSize(value)+2}ch`}; \r\n}\r\n\r\nexport function SetSize(value:any):number { \r\n  const w = String(value).length; \r\n  return w < 5 ? 5 : w; \r\n} \r\n\r\n",["214","215"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\arrays.utils.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\valuetypetesting.utils.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\mongooseaxios.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\mongooseparser.utils.ts",["216"],"export interface IMongooseCollection { \r\n  accessor:string; \r\n  label:string; \r\n  fields: IMongooseField[]; \r\n  entries: IEntry[]; \r\n} \r\n\r\nexport interface IMongooseField { \r\n  path:string;  // accessor \r\n  instance:string; \r\n  validators: any; \r\n  options: { \r\n    ref?: string; \r\n    label?: string; \r\n    sortType?: string; \r\n    defaultValue?: any; \r\n    format?: string; \r\n    enum?: any[]; \r\n    abbrev?: boolean; \r\n    [key:string]:any; \r\n  }; \r\n  $embeddedSchemaType?:{ \r\n    instance:string; \r\n  }; \r\n  [key:string]:any; \r\n} \r\n\r\n\r\nexport function ParseCollection(model:any):ICollection { \r\n  const accessor = model['accessor']; \r\n  const label = model['label']; \r\n  const ifields = ParseFields(model['fields']); \r\n  const entries = model['entries']; \r\n  return {accessor, label, ifields, entries}; \r\n} \r\n\r\nexport function ParseFields(fields:any):IField[] { \r\n  const mongooseFields:IMongooseField[] = Object.keys(fields).map(f => fields[f]); \r\n  return mongooseFields.map(f=>ParseField(f)); \r\n} \r\n\r\n//async function ParseFields() \r\nexport function ParseField(field:IMongooseField):IField {   \r\n  const {path, instance, options, $embeddedSchemaType} = field; \r\n  const ifield:IField = {} as IField; \r\n\r\n  ifield.accessor = path ?? ''; \r\n  ifield.label = options.label ?? ''; \r\n  ifield.options = options ?? {}; \r\n  ifield.type = options?.ref ?? $embeddedSchemaType?.instance ?? field.instance.toLowerCase(); \r\n  ifield.isMixed = instance.toLowerCase() === 'mixed'; \r\n  ifield.isEnum = !!options?.enum; \r\n  ifield.isArray = instance.toLowerCase() === 'array'; \r\n  ifield.isModel = !!options?.ref; \r\n  ifield.isAbbrev = !!options?.abbrev; \r\n\r\n  ifield.enums = options.enum ?? []; \r\n  ifield.format = options.format ?? \"${value}\"; \r\n  ifield.sort = options.sortType ?? ''; \r\n  ifield.defaultValue = GetDefaultValue(ifield.type, ifield.options); \r\n  \r\n  //ifield.validators = \r\n  return ifield; \r\n} \r\n\r\n\r\nfunction GetDefaultValue(type:string, options:any):any { \r\n  if(options['defaultValue']) \r\n    return options['defaultValue']; \r\n  if(options['default']) \r\n    return options['default']; \r\n  if(type === 'boolean') \r\n    return false; \r\n  if(type === 'number') \r\n    return 0; \r\n  return ''; \r\n} ","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\arrx\\arrx.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\objx\\objx.component.tsx",[],["217","218"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\tablr\\cells.component.tsx",["219","220","221"],"import React, {useContext} from 'react'; \r\nimport {RowContext} from './rows.component'; \r\nimport {TablrContext} from './tablr.component'; \r\nimport {IsNull, GetDefaultValueFromIField, IsEmpty} from '../../_utils'; \r\n\r\n// CELLS ========================================\r\nconst CellsContext = React.createContext({}); \r\ninterface ICells{ ifields:IField[]; } \r\nexport function Cells({ifields, children}:React.PropsWithChildren<ICells>) { \r\n\r\n  // Render -------------------------------------\r\n  return <CellsContext.Provider value={{}} > \r\n    {ifields.map((ifield) => { \r\n      return <Cell key={ifield.accessor} {...{ifield}}>{children}</Cell>; \r\n    })} \r\n  </CellsContext.Provider> \r\n} \r\n\r\n\r\n// Row --------------------------------------------\r\ninterface ICell { ifield: IField; } \r\ninterface ICellContext { value:any, row:number, ifield:IField} \r\nexport const CellContext = React.createContext({} as ICellContext); \r\nexport function Cell({ifield, children}:React.PropsWithChildren<ICell>) { \r\n  const {datas} = useContext(TablrContext); \r\n  const {row} = useContext(RowContext); \r\n\r\n  const data = datas[row]; \r\n  const value = IsEmpty(data) ? GetDefaultValueFromIField(ifield): datas[row][ifield.accessor]; \r\n  const context = {value, row, ifield} as ICellContext; \r\n  \r\n  // RENDER -------------------------------------\r\n  return <CellContext.Provider value={context}> \r\n      <td>{!children && JSON.stringify(value) || children}</td> \r\n    </CellContext.Provider> \r\n} \r\n","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\tablr\\tablr.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\tablr\\rows.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\tablr\\headers.component.tsx",["222","223","224"],"import React, {useContext} from 'react'; \r\n\r\n\r\n// HEADER =======================================\r\ninterface IHeader {}\r\nexport function Header({children}:React.PropsWithChildren<IHeader>) { \r\n  return <thead> \r\n    <tr>{children}</tr> \r\n  </thead> \r\n} \r\n\r\n// HEADS ---------------------------------------\r\nconst HeadsContext = React.createContext({}); \r\nexport function Heads({ifields, children}:React.PropsWithChildren<{ ifields:IField[] }>) { \r\n\r\n  return <HeadsContext.Provider value={{}}> \r\n    {ifields.map( (ifield, key) => { \r\n      return <Head {...{key, ifield}}>{children}</Head>\r\n    })} \r\n  </HeadsContext.Provider> \r\n}\r\n\r\n// HEAD ---------------------------------------\r\nexport const HeadContext = React.createContext({} as {ifield:IField}); \r\nexport function Head({ifield, children}:React.PropsWithChildren<{ ifield:IField }>) { \r\n\r\n  return <HeadContext.Provider value={{ifield}}>\r\n    <th>{!children && ifield.label || children}</th>\r\n  </HeadContext.Provider>\r\n} \r\n","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\dao\\dao.class.ts",["225"],"import {IsEmpty} from '../_utils'; \r\n\r\nexport interface ICrud { \r\n  Collection:(accessor:string) => Promise<IResponse>; \r\n  Create: (accessor:string, toCreate?:IEntry|IEntry[]) => Promise<IResponse>; \r\n  Read: (accessor:string, id?:string[]) => Promise<IResponse>; \r\n  Update: (accessor:string, toUpdate:IEntry|IEntry[]) => Promise<IResponse>; \r\n  Delete: (accessor:string, toDelete?:IEntry|IEntry[]) => Promise<IResponse>; \r\n} \r\n\r\n// DataAcessObject ==============================\r\nexport class DataAccessObject { \r\n  public collections:Collections = new Collections(); \r\n\r\n  private crud:ICrud = {} as ICrud; \r\n  \r\n  constructor(crud:ICrud) { \r\n    this.crud = crud; \r\n  } \r\n\r\n  /*public GetCollections(accessors?:string[]):ICollection[] { \r\n    return this.collections.GetCollections(accessors); \r\n  } */\r\n\r\n  // COLLECTION .................................\r\n  public async Collections(accessors:string[]):Promise<IResponse[]> { \r\n    const responses = [] as IResponse[]; \r\n    for(let i=0; i<accessors.length; i++) { \r\n      const response = await this.Collection(accessors[i]); \r\n      responses.push(response); \r\n    } \r\n    return responses; \r\n  } \r\n\r\n  public async Collection(accessors:string):Promise<IResponse> { \r\n    const response = await this.crud.Collection(accessors); \r\n    if(response.success) \r\n      this.collections.collections.push(response.data); \r\n    return response; \r\n  }\r\n\r\n  // CREATE .....................................  \r\n  public async Create(accessor:string, entry:IEntry):Promise<IResponse> { \r\n    const [response] = (await this.crud.Create(accessor, entry)).data as IResponse[]; \r\n    if(response.success) { \r\n      console.log(response.data); \r\n      this.collections.Create(accessor, response.data); \r\n    }\r\n    return response; \r\n  } \r\n\r\n  // READ .......................................\r\n  public async Read(accessor:string, entry?:string[]):Promise<IEntry[]> { \r\n    //const results = (await crud.Read(accessor, [entry])).data as IResponse[]; \r\n    //const selectedCollection = this.GetCollection(accessor); \r\n    /*if(selectedCollection) \r\n      selectedCollection.Create(response.data); */ \r\n    return [] as IEntry[]; \r\n  } \r\n\r\n  // UPDATE .....................................\r\n  public async Update(accessor:string, entry:IEntry):Promise<IResponse> { \r\n    const [response] = (await this.crud.Update(accessor, [entry])).data as IResponse[]; \r\n    if(response.success) {\r\n      console.log(response.data); \r\n      this.collections.Update(accessor, response.data); \r\n    }\r\n    return response; \r\n  } \r\n\r\n  // DELETE .....................................\r\n  public async Delete(accessor:string, entry?:IEntry):Promise<IResponse> { \r\n    const [response] = (await this.crud.Delete(accessor, entry)).data as IResponse[]; \r\n    if(response.success) {\r\n      console.log(response.data); \r\n      this.collections.Delete(accessor, response.data); \r\n    }\r\n    return response; \r\n  } \r\n\r\n  // GET FOREIGN ELEMENTS -----------------------------\r\n  public GetForeignElements(ifield:IField) \r\n    : {foreignCollection:ICollection|undefined, abbrevField:IField|undefined} \r\n  { \r\n    return this.collections.GetForeignElements(ifield); \r\n  } \r\n\r\n  public GetForeignOptions(ifield:IField) : IOption[] { \r\n    const {foreignCollection, abbrevField} = this.GetForeignElements(ifield);\r\n    if(!foreignCollection || !abbrevField)\r\n      return [] as IOption[]; \r\n    return foreignCollection.entries?.map( e => { \r\n      return {value:e._id, label:e[abbrevField.accessor]} as IOption; \r\n    }); \r\n  } \r\n\r\n  public GetForeignValues(ifield:IField, ids:string[]):any[] { \r\n    const {foreignCollection, abbrevField} = this.GetForeignElements(ifield); \r\n    if(!ids || IsEmpty(ids)) \r\n      return []; \r\n    if(!foreignCollection || !abbrevField) \r\n      return [] as IOption[]; \r\n    return foreignCollection.entries\r\n      ?.filter(e => ids.includes(e._id) )\r\n      ?.map( e => e[abbrevField.accessor] );\r\n  } \r\n} \r\n\r\n\r\n\r\n\r\n// Collections ===================================\r\nclass Collections { \r\n  public collections:ICollection[] = [] as ICollection[]; \r\n\r\n  public Create(accessor:string, entry:IEntry) { \r\n    const collection = new Collection(this.collections.find(c=> c.accessor===accessor)); \r\n    return collection.Create(entry);  \r\n  } \r\n\r\n  public Update(accessor:string, entry:IEntry) { \r\n    const collection = new Collection(this.collections.find(c=> c.accessor===accessor)); \r\n    return collection.Update(entry); \r\n  } \r\n\r\n  public Delete(accessor:string, entry:IEntry) {\r\n    const collection = new Collection(this.collections.find(c=> c.accessor===accessor)); \r\n    return collection.Delete(entry); \r\n  }\r\n  \r\n  // GET FOREIGN INFO -----------------------------\r\n  public GetForeignElements(ifield:IField) \r\n      :{foreignCollection:ICollection|undefined, abbrevField:IField|undefined} { \r\n    const foreignCollection = this.collections.find(c => c.accessor === ifield.type); \r\n    const abbrevField = new Collection(foreignCollection).GetAbbrevField(); \r\n    return {foreignCollection, abbrevField}; \r\n  }\r\n}\r\n\r\n\r\n\r\n// COLLECTION ===================================\r\nclass Collection { \r\n  public collection:ICollection|undefined; \r\n\r\n  constructor(collection:ICollection|undefined) { \r\n    if(collection) \r\n      this.collection = collection; \r\n  }\r\n\r\n  // Create -------------------------------------\r\n  public Create(entry:IEntry) { \r\n    if(!this.collection?.entries) \r\n      return false; \r\n    this.collection.entries.push(entry); \r\n    return true;\r\n  }\r\n\r\n  // Read ---------------------------------------\r\n  public Read(ids?:string[]) { \r\n    if(!this.collection?.entries) \r\n      return [];\r\n    if(IsEmpty(ids) ) \r\n      return this.collection.entries; \r\n    return this.collection.entries.filter(e => ids?.includes(e._id) ); \r\n  }\r\n\r\n  // Update \r\n  public Update(entry:IEntry) { \r\n    if(!this.collection?.entries) \r\n      return false; \r\n    const index = this.collection.entries?.findIndex( e => e._id === entry._id ); \r\n    if(index < 0) \r\n      return false; \r\n    this.collection.entries[index] = {...entry}; \r\n    return true; \r\n  }\r\n\r\n  // Delete\r\n  public Delete(entry:IEntry) {\r\n    if(!this.collection?.entries) \r\n      return false;\r\n    const index = this.collection?.entries.findIndex( e => e._id === entry._id ); \r\n    if(index < 0) \r\n      return false; \r\n    this.collection?.entries.splice(index, 1); \r\n    return true; \r\n  }\r\n\r\n  public GetAbbrevField():IField|undefined { \r\n    const abbrevField = this.collection?.ifields.find( f => f.isAbbrev) \r\n      ?? this.collection?.ifields.find( f => (f.type === 'string' || f.type === 'number') && !f.isArray); \r\n    return abbrevField; \r\n  } \r\n}\r\n\r\n\r\n","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\dao\\usedao.hook.ts",["226","227"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\dao\\daocontexter.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\feedback.component.tsx",["228","229"],"import React, {useContext} from 'react'; \r\nimport {DaoContext} from '../reusable/_dao'; \r\n\r\n\r\n// Feedback =====================================\r\nexport function FeedBack() { \r\n  const {state} = useContext(DaoContext); \r\n\r\n  return <div> \r\n    {!state.ready && <span>LOADING ... </span>} \r\n    {state.ready && <span>Ready </span>} \r\n    {state.ready && state.success && state.response['actionType'] === 'update'} \r\n    {state.ready && !state.success && 'an errors occured'} \r\n  </div> \r\n} \r\n\r\nfunction CrudFeedBack({response}:{response:IResponse}) { \r\n  const {actionType, success, data, err} = response; \r\n\r\n  if(success) { \r\n    return <span> \r\n      {actionType === 'create' && <span>Successful creation</span>} \r\n      {actionType === 'update' && <span>Successful update</span>} \r\n      {actionType === 'delete' && <span>Successful deletion</span>} \r\n    </span> \r\n  } \r\n\r\n  return <span> \r\n    {actionType === 'create' && <span>Failed creation</span>} \r\n    {actionType === 'update' && <span>Failed update</span>} \r\n    {actionType === 'delete' && <span>Failed deletion</span>} \r\n    {<div>{JSON.stringify(err)}</div>} \r\n  </span> \r\n} ","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_dao.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_mongooseparser.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_utils.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_useloader.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\customhooks\\useloader.hook.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\toggle\\toggle.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\toggle\\usetoggle.hook.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_usetoggle.ts",[],["230","231"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_arrx.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\select\\select.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\select\\select.hook.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_input.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\input\\input.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\inputarray\\inputarray.component.tsx",["232","233","234","235","236","237"],"import React, { useContext, useEffect, useState } from 'react'; \r\nimport {Arrx, ArrxContext, Elements, Element, ElementContext, ElementIndex, ElementValue} from '../../_arrx'; \r\nimport {Input} from '../../_input'; \r\nimport {IInputArray, IUseInputArray, useInputArray} from './inputarray.hook'; \r\n\r\n\r\nexport const InputArrayContext = React.createContext({} as IUseInputArray); \r\nexport function InputArray({...props}:React.PropsWithChildren<IInputArray>) { \r\n  const context = useInputArray(props); \r\n  const {values} = props; \r\n  \r\n  return <InputArrayContext.Provider value={context} > \r\n    <Arrx {...{values}} > \r\n      <Elements> \r\n        <UpdateElement/> <DeleteBtn/>\r\n        <br/> \r\n      </Elements> \r\n      <CreateElement/>\r\n    </Arrx> \r\n  </InputArrayContext.Provider> \r\n} \r\n\r\n\r\n// Create element =======================================\r\nfunction CreateElement() { \r\n  const {type, defaultValue, Create} = useContext(InputArrayContext); \r\n  const [value, setValue] = useState(defaultValue); \r\n\r\n  const onEnterUp = () => {\r\n    Create(value); \r\n    setValue(() => defaultValue); // reset input to defaultValue after creation. \r\n  }; \r\n  return <Input {...{value, setValue, defaultValue, type, onEnterUp}}  /> \r\n} \r\n\r\n// Update element =======================================\r\nfunction UpdateElement() { \r\n  const {values, type, defaultValue, Update} = useContext(InputArrayContext); \r\n  const {index} = useContext(ElementContext); \r\n\r\n  const [value, setValue] = useState(values[index]); \r\n  useEffect(() => { \r\n    setValue(values[index]); \r\n  }, [JSON.stringify(values[index])]); \r\n\r\n  const onEnterUp = () => Update(index, value); \r\n  return <Input {...{value, setValue, type, defaultValue, onEnterUp}} />\r\n}\r\n\r\n// Delete Btn ===================================\r\nexport function DeleteBtn({children, ...props}:React.PropsWithChildren<React.ButtonHTMLAttributes<HTMLButtonElement>>) { \r\n  const {Delete} = useContext(InputArrayContext); \r\n  const {index} = useContext(ElementContext); \r\n  return <button onClick={() => Delete(index)} {...props}> \r\n    {!children ? 'x' : children} \r\n  </button> \r\n}\r\n\r\n","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\inputarray\\inputarray.hook.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_tablr.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_rendering.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\rendering\\renderers.utils.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\rendering\\valuerenderer.component.tsx",["238","239","240","241","242","243","244"],"import { useEffect, useMemo, useState } from 'react'; \r\nimport {IFieldToHandler, IRenderers} from './renderers.utils'; \r\n\r\n\r\n\r\n// DATA RENDERER ================================\r\ninterface IValueRenderer { \r\n  value:any; \r\n  data:any; \r\n  setData:any; \r\n  isEdit:boolean; \r\n  ifield:IField; \r\n  renderers:IRenderers; \r\n} \r\nexport function ValueRenderer({...props}:IValueRenderer) { \r\n  const {data, setData, ifield, isEdit, renderers} = props; \r\n  const [value, setValue] = useState(props.value); \r\n\r\n  //console.log([props.data, value]); \r\n\r\n  // update value if data changes \r\n  useEffect(() => { \r\n    setValue(props.value); \r\n  }, [JSON.stringify(props.value)]) \r\n\r\n  // update data when value is changed \r\n  const hasChanged = JSON.stringify(props.value) !== JSON.stringify(value) \r\n  /*if(hasChanged) \r\n    console.log([ifield.accessor, value, props.value]); */ \r\n\r\n  useEffect(() => { \r\n    if(!isEdit) \r\n      return; \r\n    const newData = {...data}; \r\n    newData[ifield.accessor] = value; \r\n    /*if(ifield.accessor === 'titles') \r\n      console.log(newData); */ \r\n    //setData(newData); \r\n  }, [JSON.stringify(value)]); \r\n\r\n  const handler = `${IFieldToHandler(ifield)}${isEdit?'Edit':'Read'}`; \r\n  const renderer = renderers[handler] ?? renderers['Default']; \r\n\r\n  \r\n  return <span>{renderer(ifield)(value, setValue)}</span> \r\n  //return <span>Dada</span>\r\n}","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\valuerenderer.component.tsx",["245","246","247","248","249","250","251"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\crudbtn.component.tsx",["252"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\cellrenderer.component.tsx",["253","254","255"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\collectionselector.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\admintablr.component.tsx",["256","257","258","259","260"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_usepage.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\customhooks\\usepage.tsx",[],{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","severity":1,"message":"266","line":4,"column":9,"nodeType":"267","messageId":"268","endLine":4,"endColumn":19},{"ruleId":"269","severity":1,"message":"270","line":20,"column":6,"nodeType":"271","endLine":20,"endColumn":8,"suggestions":"272"},{"ruleId":"261","replacedBy":"273"},{"ruleId":"263","replacedBy":"274"},{"ruleId":"275","severity":1,"message":"276","line":2,"column":9,"nodeType":"267","messageId":"268","endLine":2,"endColumn":15},{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","replacedBy":"264"},{"ruleId":"277","severity":1,"message":"278","line":58,"column":37,"nodeType":"279","messageId":"280","endLine":58,"endColumn":47},{"ruleId":"261","replacedBy":"281"},{"ruleId":"263","replacedBy":"282"},{"ruleId":"275","severity":1,"message":"276","line":4,"column":9,"nodeType":"267","messageId":"268","endLine":4,"endColumn":15},{"ruleId":"283","severity":1,"message":"284","line":34,"column":22,"nodeType":"285","messageId":"286","endLine":34,"endColumn":24},{"ruleId":"283","severity":1,"message":"284","line":34,"column":47,"nodeType":"285","messageId":"286","endLine":34,"endColumn":49},{"ruleId":"275","severity":1,"message":"287","line":1,"column":16,"nodeType":"267","messageId":"268","endLine":1,"endColumn":26},{"ruleId":"283","severity":1,"message":"284","line":28,"column":20,"nodeType":"285","messageId":"286","endLine":28,"endColumn":22},{"ruleId":"283","severity":1,"message":"284","line":28,"column":36,"nodeType":"285","messageId":"286","endLine":28,"endColumn":38},{"ruleId":"288","severity":1,"message":"289","line":13,"column":40,"nodeType":"267","messageId":"290","endLine":13,"endColumn":51},{"ruleId":"269","severity":1,"message":"291","line":59,"column":34,"nodeType":"271","endLine":59,"endColumn":36,"suggestions":"292"},{"ruleId":"269","severity":1,"message":"293","line":81,"column":6,"nodeType":"271","endLine":81,"endColumn":24,"suggestions":"294"},{"ruleId":"275","severity":1,"message":"295","line":17,"column":10,"nodeType":"267","messageId":"268","endLine":17,"endColumn":22},{"ruleId":"275","severity":1,"message":"296","line":18,"column":31,"nodeType":"267","messageId":"268","endLine":18,"endColumn":35},{"ruleId":"261","replacedBy":"297"},{"ruleId":"263","replacedBy":"298"},{"ruleId":"275","severity":1,"message":"299","line":2,"column":15,"nodeType":"267","messageId":"268","endLine":2,"endColumn":26},{"ruleId":"275","severity":1,"message":"300","line":2,"column":38,"nodeType":"267","messageId":"268","endLine":2,"endColumn":45},{"ruleId":"275","severity":1,"message":"301","line":2,"column":63,"nodeType":"267","messageId":"268","endLine":2,"endColumn":75},{"ruleId":"275","severity":1,"message":"302","line":2,"column":77,"nodeType":"267","messageId":"268","endLine":2,"endColumn":89},{"ruleId":"269","severity":1,"message":"303","line":44,"column":6,"nodeType":"271","endLine":44,"endColumn":37,"suggestions":"304"},{"ruleId":"269","severity":1,"message":"305","line":44,"column":7,"nodeType":"306","endLine":44,"endColumn":36},{"ruleId":"275","severity":1,"message":"307","line":1,"column":21,"nodeType":"267","messageId":"268","endLine":1,"endColumn":28},{"ruleId":"275","severity":1,"message":"308","line":16,"column":16,"nodeType":"267","messageId":"268","endLine":16,"endColumn":23},{"ruleId":"269","severity":1,"message":"309","line":24,"column":6,"nodeType":"271","endLine":24,"endColumn":35,"suggestions":"310"},{"ruleId":"269","severity":1,"message":"305","line":24,"column":7,"nodeType":"306","endLine":24,"endColumn":34},{"ruleId":"275","severity":1,"message":"311","line":27,"column":9,"nodeType":"267","messageId":"268","endLine":27,"endColumn":19},{"ruleId":"269","severity":1,"message":"312","line":39,"column":6,"nodeType":"271","endLine":39,"endColumn":29,"suggestions":"313"},{"ruleId":"269","severity":1,"message":"305","line":39,"column":7,"nodeType":"306","endLine":39,"endColumn":28},{"ruleId":"275","severity":1,"message":"307","line":1,"column":21,"nodeType":"267","messageId":"268","endLine":1,"endColumn":28},{"ruleId":"275","severity":1,"message":"308","line":16,"column":16,"nodeType":"267","messageId":"268","endLine":16,"endColumn":23},{"ruleId":"269","severity":1,"message":"309","line":24,"column":6,"nodeType":"271","endLine":24,"endColumn":35,"suggestions":"314"},{"ruleId":"269","severity":1,"message":"305","line":24,"column":7,"nodeType":"306","endLine":24,"endColumn":34},{"ruleId":"275","severity":1,"message":"311","line":27,"column":9,"nodeType":"267","messageId":"268","endLine":27,"endColumn":19},{"ruleId":"269","severity":1,"message":"312","line":39,"column":6,"nodeType":"271","endLine":39,"endColumn":29,"suggestions":"315"},{"ruleId":"269","severity":1,"message":"305","line":39,"column":7,"nodeType":"306","endLine":39,"endColumn":28},{"ruleId":"316","severity":1,"message":"317","line":49,"column":10,"nodeType":"267","messageId":"318","endLine":49,"endColumn":17},{"ruleId":"275","severity":1,"message":"319","line":9,"column":39,"nodeType":"267","messageId":"268","endLine":9,"endColumn":49},{"ruleId":"275","severity":1,"message":"320","line":9,"column":51,"nodeType":"267","messageId":"268","endLine":9,"endColumn":59},{"ruleId":"269","severity":1,"message":"321","line":27,"column":6,"nodeType":"271","endLine":27,"endColumn":13,"suggestions":"322"},{"ruleId":"275","severity":1,"message":"323","line":3,"column":16,"nodeType":"267","messageId":"268","endLine":3,"endColumn":28},{"ruleId":"275","severity":1,"message":"324","line":5,"column":14,"nodeType":"267","messageId":"268","endLine":5,"endColumn":24},{"ruleId":"275","severity":1,"message":"325","line":6,"column":16,"nodeType":"267","messageId":"268","endLine":6,"endColumn":27},{"ruleId":"275","severity":1,"message":"326","line":17,"column":21,"nodeType":"267","messageId":"268","endLine":17,"endColumn":33},{"ruleId":"275","severity":1,"message":"327","line":61,"column":10,"nodeType":"267","messageId":"268","endLine":61,"endColumn":15},"no-native-reassign",["328"],"no-negated-in-lhs",["329"],"no-unused-vars","'TestSelect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Collections'. Either include it or remove the dependency array.","ArrayExpression",["330"],["328"],["329"],"@typescript-eslint/no-unused-vars","'IsNull' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression",["328"],["329"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'useContext' is defined but never used.","@typescript-eslint/no-use-before-define","'Collections' was used before it was defined.","noUseBeforeDefine","React Hook useMemo has a missing dependency: 'dao'. Either include it or remove the dependency array.",["331"],"React Hook useEffect has a missing dependency: 'InitActiveEntry'. Either include it or remove the dependency array.",["332"],"'CrudFeedBack' is defined but never used.","'data' is assigned a value but never used.",["328"],["329"],"'ArrxContext' is defined but never used.","'Element' is defined but never used.","'ElementIndex' is defined but never used.","'ElementValue' is defined but never used.","React Hook useEffect has missing dependencies: 'index' and 'values'. Either include them or remove the dependency array.",["333"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'useMemo' is defined but never used.","'setData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.value'. Either include it or remove the dependency array. If 'setValue' needs the current value of 'props.value', you can also switch to useReducer instead of useState and read 'props.value' in the reducer.",["334"],"'hasChanged' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data', 'ifield.accessor', 'isEdit', and 'value'. Either include them or remove the dependency array.",["335"],["336"],["337"],"@typescript-eslint/no-redeclare","'CrudBtn' is already defined.","redeclared","'activeMode' is assigned a value but never used.","'GetEntry' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'ifield.accessor' and 'setActiveEntry'. Either include them or remove the dependency array.",["338"],"'TablrContext' is defined but never used.","'RowContext' is defined but never used.","'CellContext' is defined but never used.","'setPageIndex' is assigned a value but never used.","'Pagin' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"347","fix":"351"},{"desc":"349","fix":"352"},{"desc":"353","fix":"354"},"Update the dependencies array to be: [Collections]",{"range":"355","text":"356"},"Update the dependencies array to be: [dao]",{"range":"357","text":"358"},"Update the dependencies array to be: [InitActiveEntry, activeCollection]",{"range":"359","text":"360"},"Update the dependencies array to be: [index, values]",{"range":"361","text":"362"},"Update the dependencies array to be: [props.value]",{"range":"363","text":"364"},"Update the dependencies array to be: [data, ifield.accessor, isEdit, value]",{"range":"365","text":"366"},{"range":"367","text":"364"},{"range":"368","text":"366"},"Update the dependencies array to be: [ifield.accessor, setActiveEntry, value]",{"range":"369","text":"370"},[824,826],"[Collections]",[1703,1705],"[dao]",[2922,2940],"[InitActiveEntry, activeCollection]",[1560,1591],"[index, values]",[634,663],"[props.value]",[1105,1128],"[data, ifield.accessor, isEdit, value]",[639,668],[1108,1131],[1046,1053],"[ifield.accessor, setActiveEntry, value]"]