[{"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\index.js":"1","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\App.js":"2","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reportWebVitals.js":"3","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\menu.components.js":"4","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\patient.page.tsx":"5","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\admin.page.tsx":"6","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\home.page.tsx":"7","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\nav\\nav.component.tsx":"8","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\input\\input.component.tsx":"9","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_input.ts":"10","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\input.utils.ts":"11","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\inputdata\\inputdata.component.tsx":"12","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\show\\show.component.tsx":"13","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\inputarray\\inputarray.component.tsx":"14","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\inputdata\\useInput.hook.tsx":"15","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\inputarray\\inputarray.hook.tsx":"16","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_utils.ts":"17","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\utils.ts":"18"},{"size":600,"mtime":1609529670659,"results":"19","hashOfConfig":"20"},{"size":594,"mtime":1609477790694,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":225,"mtime":1609475507334,"results":"23","hashOfConfig":"20"},{"size":1172,"mtime":1609616619924,"results":"24","hashOfConfig":"20"},{"size":119,"mtime":1609476074144,"results":"25","hashOfConfig":"20"},{"size":117,"mtime":1609476049273,"results":"26","hashOfConfig":"20"},{"size":496,"mtime":1609529821305,"results":"27","hashOfConfig":"20"},{"size":6075,"mtime":1609618434339,"results":"28","hashOfConfig":"20"},{"size":541,"mtime":1609452678993,"results":"29","hashOfConfig":"20"},{"size":1628,"mtime":1609534858379,"results":"30","hashOfConfig":"20"},{"size":1371,"mtime":1609452679040,"results":"31","hashOfConfig":"20"},{"size":904,"mtime":1609452679066,"results":"32","hashOfConfig":"20"},{"size":1354,"mtime":1609452679033,"results":"33","hashOfConfig":"20"},{"size":1968,"mtime":1609452679042,"results":"34","hashOfConfig":"20"},{"size":1001,"mtime":1609452679037,"results":"35","hashOfConfig":"20"},{"size":116,"mtime":1609617716902,"results":"36","hashOfConfig":"20"},{"size":1243,"mtime":1609618229401,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"ke513i",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"51"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"51"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\index.js",[],["78","79"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\App.js",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reportWebVitals.js",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\menu.components.js",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\patient.page.tsx",["80","81"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\admin.page.tsx",[],["82","83"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\home.page.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\nav\\nav.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\input\\input.component.tsx",["84","85"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_input.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\input.utils.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\inputdata\\inputdata.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\show\\show.component.tsx",["86"],"import React from 'react'; \r\n\r\ninterface IShow { \r\n  value:any; \r\n  type?:string; \r\n  long?:boolean; \r\n}\r\nexport default function Show({value, type = typeof value, long = false}:IShow) { \r\n  if(Array.isArray(value)) \r\n    return <ShowArray {...{value, type, long}} /> \r\n  if(type === 'string' || type === 'number') \r\n    return <span>{value}</span> \r\n  if(type === 'boolean') \r\n    return <span>{JSON.stringify(value)}</span> \r\n  return <span>{JSON.stringify(value)}</span> \r\n}\r\n\r\nfunction ShowArray({long = false, ...props}:IShow) {\r\n  const values = props.value ?? []; \r\n  const type = props.type ?? 'any'; \r\n  \r\n  const isLong = <div>\r\n    [{values.map( (v:any, i:number) => { \r\n      return i < values.length-1 ? \r\n        <span key={i}> {v}, </span>: \r\n        <span key={i}> {v} </span>; \r\n    })}] \r\n  </div>\r\n\r\n  return <span> {props.type} x {values.length} \r\n    {long && isLong} \r\n  </span> \r\n}","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\inputarray\\inputarray.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\inputdata\\useInput.hook.tsx",["87","88"],"import {useState, useEffect} from 'react'; \r\nimport {IEvent, IInput, GetValueFromInput, IsPressEnter} from '../input.utils'; \r\n\r\n\r\n// Return interface -----------------------------\r\ninterface IUseInput { \r\n  value:any; \r\n  type: string; \r\n  setValue:React.Dispatch<React.SetStateAction<any>>; \r\n  useref?: any; \r\n\r\n  returnValue:(value:any) => any; \r\n\r\n  // Event\r\n  onChange: (event:any) => void; \r\n  onBlur: (event:any) => void; \r\n  onPressEnter: (event:any) => void; \r\n  [key:string]:any; \r\n} \r\n// useInput =====================================\r\nexport function useInput(props:IInput):IUseInput { \r\n  const [value, setValue] = useState(props.value); \r\n  \r\n  // Synchronize value with parent's value. \r\n  useEffect(() => { \r\n    if (props.value !== value) { \r\n      setValue(props.value); \r\n  } \r\n  }, [JSON.stringify(props.value)]); \r\n  const {type, useref, returnValue} = props; \r\n  const onChange = props.onChange? props.onChange : DefaultOnChange(type, setValue); \r\n  const onPressEnter = DefaultOnPressEnter(value, returnValue, props.onPressEnter); \r\n  const onBlur = props.onBlur ? props.onBlur : DefaultOnBlur(value, returnValue); \r\n\r\n  return {...props, value, type, setValue, useref, returnValue, onChange, onBlur, onPressEnter}; \r\n} \r\n\r\n\r\n// DEFAULT ON BLUR ==============================\r\nfunction DefaultOnBlur(value:any, returnValue:any):(event:any) => void { \r\n  return (event:any) => returnValue(value); \r\n}\r\n\r\n// DEFAULT ON PRESS ENTER =======================\r\nfunction DefaultOnPressEnter(value:any, returnValue:any, onPressEnter?:(event:any) => void):(event:any) => void {\r\n  return (event:any) => { \r\n    if(IsPressEnter((event as IEvent).code) ) \r\n      onPressEnter? onPressEnter(event) : returnValue(value); \r\n  } \r\n} \r\n\r\n// DEFAULT OnCHANGE =============================\r\nfunction DefaultOnChange(type:string, setValue:any):(event:any) => void {\r\n  return (event:any) => \r\n    setValue( () => GetValueFromInput(event as IEvent, type)); \r\n}\r\n\r\n","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\inputarray\\inputarray.hook.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_utils.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\utils.ts",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":2,"column":9,"nodeType":"95","messageId":"96","endLine":2,"endColumn":14},{"ruleId":"93","severity":1,"message":"97","line":8,"column":9,"nodeType":"95","messageId":"96","endLine":8,"endColumn":20},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"98","line":2,"column":45,"nodeType":"95","messageId":"96","endLine":2,"endColumn":57},{"ruleId":"99","severity":1,"message":"100","line":125,"column":6,"nodeType":"101","endLine":125,"endColumn":8,"suggestions":"102"},{"ruleId":"93","severity":1,"message":"103","line":20,"column":9,"nodeType":"95","messageId":"96","endLine":20,"endColumn":13},{"ruleId":"99","severity":1,"message":"104","line":29,"column":6,"nodeType":"101","endLine":29,"endColumn":35,"suggestions":"105"},{"ruleId":"99","severity":1,"message":"106","line":29,"column":7,"nodeType":"107","endLine":29,"endColumn":34},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"@typescript-eslint/no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'placeholder' is assigned a value but never used.","'IsPressEnter' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'options', 'os', and 'setOptions'. Either include them or remove the dependency array.","ArrayExpression",["110"],"'type' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.value' and 'value'. Either include them or remove the dependency array. If 'setValue' needs the current value of 'props.value', you can also switch to useReducer instead of useState and read 'props.value' in the reducer.",["111"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},"Update the dependencies array to be: [options, os, setOptions]",{"range":"116","text":"117"},"Update the dependencies array to be: [props.value, value]",{"range":"118","text":"119"},[3709,3711],"[options, os, setOptions]",[804,833],"[props.value, value]"]