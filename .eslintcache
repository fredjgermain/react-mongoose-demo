[{"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\index.js":"1","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\App.js":"2","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reportWebVitals.js":"3","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\menu.components.js":"4","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\admin.page.tsx":"5","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\home.page.tsx":"6","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\nav\\nav.component.tsx":"7","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\input.utils.ts":"8","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\inputarray\\inputarray.component.tsx":"9","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\inputarray\\inputarray.hook.tsx":"10","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\experiments.tsx":"11","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\_utils.ts":"12","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\_input.ts":"13","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\htmlelement.utils.ts":"14","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\arrays.utils.ts":"15","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\valuetypetesting.utils.ts":"16","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\input\\input.component.tsx":"17","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\inputarray\\readarray.component.tsx":"18","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\select\\select.component.tsx":"19","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\select\\select.hook.tsx":"20","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\select\\selectheader.component.tsx":"21","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\select\\RemovableItems.component.tsx":"22","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\select\\options.component.tsx":"23","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\field\\field.class.ts":"24","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\testinputs.tsx":"25","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\testinputarrays.tsx":"26","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\testIsNull.tsx":"27","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\testarrayutils.tsx":"28","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\objx\\_objx.ts":"29","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\objx\\objx.component.tsx":"30","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\objx\\fields.components.tsx":"31","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\useloader\\_useloader.ts":"32","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\useloader\\useloader.hook.tsx":"33","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\_mongooseparser.ts":"34","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\mongooseaxios.ts":"35","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\crudaxios.ts":"36","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\mongooseparser.utils.ts":"37","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\patient.page.tsx":"38","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\components\\patientheader.component.tsx":"39","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\components\\patientidentifier.component.tsx":"40","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\components\\patientinfos.component.tsx":"41","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\components\\patientsloader.component.tsx":"42","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\questionnaire\\components\\questionnaireloader.component.tsx":"43","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\questionnaire\\components\\questionnaireforms.component.tsx":"44","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\questionnaire\\questionnairepage.page.tsx":"45","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\arrx\\_arrx.ts":"46","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\arrx\\arrx.component.tsx":"47"},{"size":600,"mtime":1609529670659,"results":"48","hashOfConfig":"49"},{"size":654,"mtime":1609885603325,"results":"50","hashOfConfig":"49"},{"size":362,"mtime":499162500000,"results":"51","hashOfConfig":"49"},{"size":225,"mtime":1609475507334,"results":"52","hashOfConfig":"49"},{"size":119,"mtime":1609476074144,"results":"53","hashOfConfig":"49"},{"size":117,"mtime":1609476049273,"results":"54","hashOfConfig":"49"},{"size":496,"mtime":1609883323259,"results":"55","hashOfConfig":"49"},{"size":1628,"mtime":1609534858379,"results":"56","hashOfConfig":"49"},{"size":2724,"mtime":1609790999005,"results":"57","hashOfConfig":"49"},{"size":970,"mtime":1609787735783,"results":"58","hashOfConfig":"49"},{"size":453,"mtime":1609804719320,"results":"59","hashOfConfig":"49"},{"size":579,"mtime":1609805717773,"results":"60","hashOfConfig":"49"},{"size":643,"mtime":1609791814153,"results":"61","hashOfConfig":"49"},{"size":1457,"mtime":1609795211769,"results":"62","hashOfConfig":"49"},{"size":3330,"mtime":1609805687249,"results":"63","hashOfConfig":"49"},{"size":348,"mtime":1609796212159,"results":"64","hashOfConfig":"49"},{"size":2032,"mtime":1609795456015,"results":"65","hashOfConfig":"49"},{"size":489,"mtime":1609790785285,"results":"66","hashOfConfig":"49"},{"size":1566,"mtime":1609790444636,"results":"67","hashOfConfig":"49"},{"size":2171,"mtime":1609983093189,"results":"68","hashOfConfig":"49"},{"size":1110,"mtime":1609787735863,"results":"69","hashOfConfig":"49"},{"size":497,"mtime":1609787735852,"results":"70","hashOfConfig":"49"},{"size":1025,"mtime":1609790418274,"results":"71","hashOfConfig":"49"},{"size":2351,"mtime":1609452679027,"results":"72","hashOfConfig":"49"},{"size":842,"mtime":1609794966770,"results":"73","hashOfConfig":"49"},{"size":1151,"mtime":1609795352133,"results":"74","hashOfConfig":"49"},{"size":776,"mtime":1609796410662,"results":"75","hashOfConfig":"49"},{"size":1238,"mtime":1609805930810,"results":"76","hashOfConfig":"49"},{"size":223,"mtime":1609788148850,"results":"77","hashOfConfig":"49"},{"size":478,"mtime":1609452679078,"results":"78","hashOfConfig":"49"},{"size":1420,"mtime":1609976051100,"results":"79","hashOfConfig":"49"},{"size":98,"mtime":1609788148795,"results":"80","hashOfConfig":"49"},{"size":1301,"mtime":1609804782791,"results":"81","hashOfConfig":"49"},{"size":329,"mtime":1609788021109,"results":"82","hashOfConfig":"49"},{"size":1819,"mtime":1609452679070,"results":"83","hashOfConfig":"49"},{"size":1608,"mtime":1609452679069,"results":"84","hashOfConfig":"49"},{"size":2252,"mtime":1609452679073,"results":"85","hashOfConfig":"49"},{"size":2239,"mtime":1609979770974,"results":"86","hashOfConfig":"49"},{"size":222,"mtime":1609965015785,"results":"87","hashOfConfig":"49"},{"size":908,"mtime":1609891033736,"results":"88","hashOfConfig":"49"},{"size":1601,"mtime":1609893388314,"results":"89","hashOfConfig":"49"},{"size":1383,"mtime":1609974282355,"results":"90","hashOfConfig":"49"},{"size":1663,"mtime":1609979895800,"results":"91","hashOfConfig":"49"},{"size":4446,"mtime":1609983258110,"results":"92","hashOfConfig":"49"},{"size":1134,"mtime":1609979572737,"results":"93","hashOfConfig":"49"},{"size":133,"mtime":1609978711077,"results":"94","hashOfConfig":"49"},{"size":1460,"mtime":1609983161743,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"ke513i",{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"98"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"108"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"108"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"108"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"108"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"108"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"108"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\index.js",[],["200","201"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\App.js",["202"],"import React from 'react'; \nimport {Switch, Route} from 'react-router-dom'; \nimport Nav from './components/nav/nav.component'; \nimport Home from './pages/home.page'; \nimport Patient from './pages/patient/patient.page'; \nimport Admin from './pages/admin/admin.page'; \nimport Experiments from './pages/experiments/experiments'; \n\n\nexport default function App() { \n  //type test = Input_Object.; \n  //return <AdminSection/> \n  return <div> \n  <Nav/> \n  <Switch> \n    <Route exact path='/' component={Home} /> \n    <Route path='/patient' component={Patient} /> \n    <Route path='/admin' component={Admin} /> \n  </Switch> \n  </div> \n} \n\n//export default App;\n","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reportWebVitals.js",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\menu.components.js",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\admin.page.tsx",[],["203","204"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\home.page.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\nav\\nav.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\input.utils.ts",[],["205","206"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\inputarray\\inputarray.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\inputarray\\inputarray.hook.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\experiments.tsx",["207","208","209","210"],"import React from 'react'; \r\nimport {TestInputs} from './testinputs'; \r\nimport {TestInputArrays} from './testinputarrays'; \r\nimport {TestSelects} from './testselect'; \r\nimport {TestIsNull} from './testIsNull'; \r\nimport {TestArrayUtils} from './testarrayutils'; \r\n\r\n\r\n\r\n\r\n// EXPERIMENTS ==================================\r\nexport default function Experiments() { \r\n\r\n  return <div> \r\n    <h1>EXPERIMENTS</h1> \r\n    <TestArrayUtils />\r\n  </div> \r\n} \r\n\r\n\r\n","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\_utils.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\_input.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\htmlelement.utils.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\arrays.utils.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\valuetypetesting.utils.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\input\\input.component.tsx",["211"],"import React from 'react'; \r\nimport {IEvent, IsNull, GetValueFromInput} from '../../utils/_utils'; \r\n\r\n\r\n// INPUT ========================================\r\nexport interface IInput extends React.HTMLAttributes<HTMLInputElement> { \r\n  value:any; \r\n  setValue:any; \r\n  defaultValue:any; \r\n  type?:string; \r\n  inputType?:string; \r\n  //[key:string]:any; \r\n} \r\nexport function Input({value, setValue, defaultValue, type=(typeof value), inputType, ...props}:IInput) { \r\n  const OnChange = (event:IEvent) => setValue(GetInputValueOrDefault(event, defaultValue)); \r\n  //const InputType = GetInputType(type, inputType); \r\n  const Value = IsNull(value) ? defaultValue: value; \r\n\r\n  if(type === 'string') \r\n    return <input type={'text'} value={Value} onChange={OnChange} {...props} /> \r\n  if(type === 'number') \r\n    return <input type={'number'} value={Value} onChange={OnChange} {...props} /> \r\n  if(type === 'boolean') \r\n    return <input type={'checkbox'} checked={Value} onChange={OnChange} {...props} /> \r\n  return <span>{JSON.stringify(value)}</span> \r\n} \r\n\r\n\r\n// GetValue --------------------------------------\r\nfunction GetInputValueOrDefault (event:IEvent, defaultValue:any) { \r\n  const value = GetValueFromInput(event); \r\n  return IsNull(value) ? defaultValue: value; \r\n}\r\n\r\n\r\n/* Get Value From Input\r\n  - Get correct value type (string, number, date, or boolean) from input element. */\r\n/*function GetValueFromInput(event:IEvent, type:string):any { \r\n  if(type === 'number') \r\n    return event.target.valueAsNumber as number; \r\n  if(type === 'date') \r\n    return event.target.valueAsDate; \r\n  if(type === 'boolean') \r\n    return event.target.checked as boolean; \r\n  return event.target.value; \r\n}*/\r\n\r\n// GetInputType ---------------------------------\r\nfunction GetInputType(type:string, inputType?:string) { \r\n  if(!inputType) \r\n    return inputType; \r\n  \r\n  if(type === 'number') \r\n    return 'number'; \r\n  if(type === 'boolean') \r\n    return 'checkbox'; \r\n  if(type === 'string') \r\n    return 'text'; \r\n  return 'text'; \r\n}\r\n\r\n","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\inputarray\\readarray.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\select\\select.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\select\\select.hook.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\select\\selectheader.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\select\\RemovableItems.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\input\\select\\options.component.tsx",["212"],"import React, {useContext, useEffect} from 'react'; \r\n//import {IOption} from '../../reusable/_input'; \r\nimport {SelectContext} from './select.component'; \r\n\r\n\r\n// OPTIONS ======================================\r\ninterface IOptions { \r\n  label?:string; // defines a optgroup with a label \r\n  options:IOption[]; \r\n  [key:string]:any; \r\n} \r\n//const OptionsContext = React.createContext({}); \r\nexport function Options({label, options}:IOptions) { \r\n  const {setOptions} = useContext(SelectContext); \r\n  \r\n  useEffect(() => { \r\n    setOptions( (prev:any) => [...prev, ...options] ); \r\n  }, []); \r\n\r\n  return <div > \r\n    {label ? (<div className={'select_body_label'}>{label}</div>) : null} \r\n    {options.map( (option,i) => { \r\n      return <Option key={i} option={option} /> \r\n    })} \r\n  </div> \r\n} \r\n\r\nfunction Option({option}:{option:IOption}) { \r\n  const {SelectValue} = useContext(SelectContext); \r\n  return <div className={'select_body_option'} onClick={() => SelectValue(option.value)}> \r\n    {option.label} \r\n  </div>\r\n}","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\field\\field.class.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\testinputs.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\testinputarrays.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\testIsNull.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\testarrayutils.tsx",["213","214","215"],"import React from 'react'; \r\nimport {Filter, Combine, Duplicates, IsEmpty, CommonPredicates, Order} from '../../reusable/utils/_utils'; \r\nconst {ByIndexes, Intersect, Exclusion, Compare} = CommonPredicates; \r\n\r\n\r\n// EXPERIMENTS ==================================\r\nexport function TestArrayUtils() { \r\n  const strings = [{name:'a'}, {name:'b'}, {name:'b'}, {name:'c'}, {name:'d'}, {name:'e'}, {name:'d'}]; \r\n  const ordering = ['e','a', 'c']; \r\n  const intersect = ['a','b','d']; \r\n\r\n  const intersects = Filter(ordering, Intersect(intersect)); \r\n  const exclusions = Filter(ordering, Exclusion(intersect)); \r\n  const ordered = Order(strings, ordering, (a:any, b:any) => a['name']===b ); \r\n\r\n  const combine = Combine(ordering, strings, (a,b) => a===b.name).map(([a,b]) => b); \r\n\r\n  const test = Filter(strings, ByIndexes([5,4,1])); \r\n\r\n  const {duplicates, unics} = Duplicates(strings, (a:any, b:any) => JSON.stringify(a) === JSON.stringify(b) ); \r\n\r\n  return <div> \r\n    {JSON.stringify(duplicates)} \r\n    <br/>\r\n    {JSON.stringify(unics)} \r\n    <br/>\r\n    {JSON.stringify(test)} \r\n    <br/>\r\n    {JSON.stringify(intersects)} \r\n    <br/>\r\n    {JSON.stringify(exclusions)} \r\n    <br/>\r\n    {JSON.stringify(ordered)} \r\n  </div> \r\n} \r\n\r\n\r\n","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\objx\\_objx.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\objx\\objx.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\objx\\fields.components.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\useloader\\_useloader.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\useloader\\useloader.hook.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\_mongooseparser.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\mongooseaxios.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\crudaxios.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\mongooseparser.utils.ts",["216"],"export interface IMongooseModel { \r\n  accessor:string; \r\n  label:string; \r\n  fields: IMongooseField[]; \r\n  entries: IEntry[]; \r\n} \r\n\r\nexport interface IMongooseField { \r\n  path:string;  // accessor \r\n  instance:string; \r\n  validators: any; \r\n  options: { \r\n    ref?: string; \r\n    label?: string; \r\n    sortType?: string; \r\n    defaultValue?: any; \r\n    format?: string; \r\n    [key:string]:any; \r\n  }; \r\n  $embeddedSchemaType?:{ \r\n    instance:string; \r\n  }; \r\n  [key:string]:any; \r\n} \r\n\r\n\r\nexport function ParseCollection(model:any):ICollection { \r\n  const accessor = model['accessor']; \r\n  const label = model['label']; \r\n  const ifields = ParseFields(model['fields']); \r\n  const entries = model['entries']; \r\n  return {accessor, label, ifields, entries}; \r\n} \r\n\r\nexport function ParseFields(fields:any):IField[] { \r\n  const mongooseFields:IMongooseField[] = Object.keys(fields).map(f => fields[f]); \r\n  return mongooseFields.map(f=>ParseField(f)); \r\n} \r\n\r\n//async function ParseFields() \r\nexport function ParseField(field:IMongooseField):IField { \r\n  const {path, instance, options} = field; \r\n  const ifield:IField = {} as IField; \r\n  ifield.accessor = path; \r\n  ifield.label = options.label ?? ''; \r\n  ifield.options = options; \r\n  ifield.type = GetType(field); \r\n  ifield.enums = options['enum'] ?? []; \r\n  ifield.format = options.format ?? \"${value}\"; \r\n  ifield.sort = options.sortType ?? ''; \r\n  ifield.defaultValue = GetDefaultValue(ifield.type, ifield.options); \r\n  \r\n  ifield.isEnum = options['enum']? true: false; \r\n  ifield.isArray = instance.toLowerCase() === 'array'; \r\n  ifield.isModel = instance.toLowerCase() === 'objectid'; \r\n  //ifield.isMixed = \r\n  //ifield.validators = \r\n  return ifield; \r\n} \r\n\r\nfunction GetType({instance, $embeddedSchemaType}:IMongooseField) { \r\n  if(instance.toLocaleLowerCase() === 'array') \r\n    return ($embeddedSchemaType?.instance ?? '').toLocaleLowerCase(); \r\n  return instance.toLocaleLowerCase(); \r\n} \r\n\r\nfunction GetDefaultValue(type:string, options:any):any { \r\n  if(options['defaultValue']) \r\n    return options['defaultValue']; \r\n  if(options['default']) \r\n    return options['default']; \r\n  if(type === 'boolean') \r\n    return false; \r\n  if(type === 'number') \r\n    return 0; \r\n  return ''; \r\n} ","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\patient.page.tsx",["217"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\components\\patientheader.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\components\\patientidentifier.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\components\\patientinfos.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\components\\patientsloader.component.tsx",["218"],"import {useContext, useEffect} from 'react'; \r\nimport {useLoader} from '../../../reusable/useloader/_useloader'; \r\n\r\nimport {CrudContext, PatientContext} from '../patient.page'; \r\n\r\n\r\n// PatientsCollectionLoader ===================== \r\nexport function PatientsLoader() { \r\n  const {crud} = useContext(CrudContext); \r\n  const {setPatients} = useContext(PatientContext); \r\n  const {state, Load} = useLoader(); \r\n\r\n  const loadfunc = async () => { \r\n    const response:IResponse = await crud.Collection('patients'); \r\n    if(response.success) \r\n      setPatients(() => response.data as ICollection); \r\n  }; \r\n\r\n  useEffect(() => {Load(loadfunc)}, []); \r\n\r\n\r\n  /* ?????? TO ADD IN USELOADER ??????\r\n  function Component(props) {\r\n    const [fetched, setFetched] = React.useState(false);\r\n    React.useEffect(() => {\r\n      const ac = new AbortController();\r\n      Promise.all([\r\n        fetch('http://placekitten.com/1000/1000', {signal: ac.signal}),\r\n        fetch('http://placekitten.com/2000/2000', {signal: ac.signal})\r\n      ]).then(() => setFetched(true))\r\n        .catch(ex => console.error(ex));\r\n      return () => ac.abort(); // Abort both fetches on unmount\r\n    }, []);\r\n    return fetched;\r\n  }\r\n  */\r\n\r\n  if(!state.ready) \r\n    return <div> Loading ... </div> \r\n  if(state.ready && !state.success) \r\n    return <div> Oh no! An error occured ... </div> \r\n  return null; \r\n} ","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\questionnaire\\components\\questionnaireloader.component.tsx",["219"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\questionnaire\\components\\questionnaireforms.component.tsx",["220","221","222","223","224","225","226","227","228","229","230","231","232","233","234"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\questionnaire\\questionnairepage.page.tsx",["235"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\arrx\\_arrx.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\arrx\\arrx.component.tsx",[],{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","severity":1,"message":"241","line":7,"column":8,"nodeType":"242","messageId":"243","endLine":7,"endColumn":19},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"236","replacedBy":"244"},{"ruleId":"238","replacedBy":"245"},{"ruleId":"246","severity":1,"message":"247","line":2,"column":9,"nodeType":"242","messageId":"243","endLine":2,"endColumn":19},{"ruleId":"246","severity":1,"message":"248","line":3,"column":9,"nodeType":"242","messageId":"243","endLine":3,"endColumn":24},{"ruleId":"246","severity":1,"message":"249","line":4,"column":9,"nodeType":"242","messageId":"243","endLine":4,"endColumn":20},{"ruleId":"246","severity":1,"message":"250","line":5,"column":9,"nodeType":"242","messageId":"243","endLine":5,"endColumn":19},{"ruleId":"246","severity":1,"message":"251","line":49,"column":10,"nodeType":"242","messageId":"243","endLine":49,"endColumn":22},{"ruleId":"252","severity":1,"message":"253","line":18,"column":6,"nodeType":"254","endLine":18,"endColumn":8,"suggestions":"255"},{"ruleId":"246","severity":1,"message":"256","line":2,"column":38,"nodeType":"242","messageId":"243","endLine":2,"endColumn":45},{"ruleId":"246","severity":1,"message":"257","line":3,"column":41,"nodeType":"242","messageId":"243","endLine":3,"endColumn":48},{"ruleId":"246","severity":1,"message":"258","line":16,"column":9,"nodeType":"242","messageId":"243","endLine":16,"endColumn":16},{"ruleId":"259","severity":1,"message":"260","line":49,"column":37,"nodeType":"261","messageId":"262","endLine":49,"endColumn":47},{"ruleId":"246","severity":1,"message":"263","line":3,"column":9,"nodeType":"242","messageId":"243","endLine":3,"endColumn":15},{"ruleId":"252","severity":1,"message":"264","line":18,"column":37,"nodeType":"254","endLine":18,"endColumn":39,"suggestions":"265"},{"ruleId":"252","severity":1,"message":"264","line":26,"column":37,"nodeType":"254","endLine":26,"endColumn":39,"suggestions":"266"},{"ruleId":"246","severity":1,"message":"267","line":2,"column":9,"nodeType":"242","messageId":"243","endLine":2,"endColumn":13},{"ruleId":"246","severity":1,"message":"268","line":2,"column":15,"nodeType":"242","messageId":"243","endLine":2,"endColumn":26},{"ruleId":"246","severity":1,"message":"269","line":2,"column":28,"nodeType":"242","messageId":"243","endLine":2,"endColumn":34},{"ruleId":"246","severity":1,"message":"270","line":2,"column":36,"nodeType":"242","messageId":"243","endLine":2,"endColumn":46},{"ruleId":"246","severity":1,"message":"271","line":2,"column":48,"nodeType":"242","messageId":"243","endLine":2,"endColumn":60},{"ruleId":"246","severity":1,"message":"272","line":2,"column":62,"nodeType":"242","messageId":"243","endLine":2,"endColumn":72},{"ruleId":"246","severity":1,"message":"273","line":3,"column":26,"nodeType":"242","messageId":"243","endLine":3,"endColumn":36},{"ruleId":"246","severity":1,"message":"274","line":6,"column":15,"nodeType":"242","messageId":"243","endLine":6,"endColumn":22},{"ruleId":"246","severity":1,"message":"275","line":6,"column":24,"nodeType":"242","messageId":"243","endLine":6,"endColumn":35},{"ruleId":"246","severity":1,"message":"276","line":25,"column":10,"nodeType":"242","messageId":"243","endLine":25,"endColumn":14},{"ruleId":"246","severity":1,"message":"277","line":71,"column":18,"nodeType":"242","messageId":"243","endLine":71,"endColumn":24},{"ruleId":"246","severity":1,"message":"278","line":77,"column":17,"nodeType":"242","messageId":"243","endLine":77,"endColumn":25},{"ruleId":"246","severity":1,"message":"279","line":77,"column":27,"nodeType":"242","messageId":"243","endLine":77,"endColumn":32},{"ruleId":"246","severity":1,"message":"280","line":78,"column":10,"nodeType":"242","messageId":"243","endLine":78,"endColumn":22},{"ruleId":"246","severity":1,"message":"279","line":87,"column":27,"nodeType":"242","messageId":"243","endLine":87,"endColumn":32},{"ruleId":"246","severity":1,"message":"281","line":2,"column":10,"nodeType":"242","messageId":"243","endLine":2,"endColumn":22},"no-native-reassign",["282"],"no-negated-in-lhs",["283"],"no-unused-vars","'Experiments' is defined but never used.","Identifier","unusedVar",["282"],["283"],"@typescript-eslint/no-unused-vars","'TestInputs' is defined but never used.","'TestInputArrays' is defined but never used.","'TestSelects' is defined but never used.","'TestIsNull' is defined but never used.","'GetInputType' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'options' and 'setOptions'. Either include them or remove the dependency array.","ArrayExpression",["284"],"'IsEmpty' is defined but never used.","'Compare' is assigned a value but never used.","'combine' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'IsNull' is defined but never used.","React Hook useEffect has missing dependencies: 'Load' and 'loadfunc'. Either include them or remove the dependency array.",["285"],["286"],"'Objx' is defined but never used.","'ObjxContext' is defined but never used.","'Fields' is defined but never used.","'FieldLabel' is defined but never used.","'FieldContext' is defined but never used.","'FieldValue' is defined but never used.","'InputArray' is defined but never used.","'Element' is defined but never used.","'ArrxContext' is defined but never used.","'crud' is assigned a value but never used.","'answer' is assigned a value but never used.","'setValue' is assigned a value but never used.","'index' is assigned a value but never used.","'responseType' is assigned a value but never used.","'CrudMongoose' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"289","fix":"291"},"Update the dependencies array to be: [options, setOptions]",{"range":"292","text":"293"},"Update the dependencies array to be: [Load, loadfunc]",{"range":"294","text":"295"},{"range":"296","text":"295"},[585,587],"[options, setOptions]",[593,595],"[Load, loadfunc]",[924,926]]