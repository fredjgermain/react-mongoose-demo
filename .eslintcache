[{"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\index.js":"1","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\App.js":"2","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reportWebVitals.js":"3","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\menu.components.js":"4","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\admin.page.tsx":"5","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\home.page.tsx":"6","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\nav\\nav.component.tsx":"7","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\htmlelement.utils.ts":"8","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\arrays.utils.ts":"9","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\valuetypetesting.utils.ts":"10","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\mongooseaxios.ts":"11","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\mongooseparser.utils.ts":"12","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\arrx\\arrx.component.tsx":"13","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\objx\\objx.component.tsx":"14","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\tablr\\cells.component.tsx":"15","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\tablr\\tablr.component.tsx":"16","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\tablr\\rows.component.tsx":"17","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\tablr\\headers.component.tsx":"18","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\dao\\dao.class.ts":"19","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\dao\\usedao.hook.ts":"20","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\dao\\daocontexter.component.tsx":"21","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_dao.ts":"22","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_mongooseparser.ts":"23","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_utils.ts":"24","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_useloader.ts":"25","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\customhooks\\useloader.hook.tsx":"26","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\toggle\\toggle.component.tsx":"27","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\toggle\\usetoggle.hook.ts":"28","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_usetoggle.ts":"29","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_arrx.ts":"30","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\select\\select.component.tsx":"31","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\select\\select.hook.tsx":"32","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_input.ts":"33","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\input\\input.component.tsx":"34","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\inputarray\\inputarray.component.tsx":"35","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\inputarray\\inputarray.hook.tsx":"36","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_tablr.ts":"37","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\rendering\\renderers.utils.tsx":"38","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\valuerenderer.component.tsx":"39","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_usepage.ts":"40","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\customhooks\\usepage.tsx":"41","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_useupdate.ts":"42","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\customhooks\\useupdate.hook.tsx":"43","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\patient.page.tsx":"44","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_objx.ts":"45","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\reader\\reader.component.tsx":"46","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\editor\\editor.component.tsx":"47","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\experiments\\testReaderEditor.tsx":"48","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\components\\collectionselector.component.tsx":"49","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\components\\admintablr.component.tsx":"50","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\feedback\\feedback.component.tsx":"51","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\components\\paging.component.tsx":"52","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\components\\linecrud.component.tsx":"53","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\components\\crudbtn.component.tsx":"54","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\components\\cellrenderer.component.tsx":"55","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\components\\ramqidentitication.component.tsx":"56","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\components\\patientprofile.component.tsx":"57"},{"size":600,"mtime":1609529670659,"results":"58","hashOfConfig":"59"},{"size":590,"mtime":1611608933301,"results":"60","hashOfConfig":"59"},{"size":362,"mtime":499162500000,"results":"61","hashOfConfig":"59"},{"size":225,"mtime":1609475507334,"results":"62","hashOfConfig":"59"},{"size":1141,"mtime":1611607453355,"results":"63","hashOfConfig":"59"},{"size":117,"mtime":1609476049273,"results":"64","hashOfConfig":"59"},{"size":496,"mtime":1609883323259,"results":"65","hashOfConfig":"59"},{"size":1493,"mtime":1611613395214,"results":"66","hashOfConfig":"59"},{"size":3330,"mtime":1611094858686,"results":"67","hashOfConfig":"59"},{"size":2003,"mtime":1611094858767,"results":"68","hashOfConfig":"59"},{"size":2205,"mtime":1611094858599,"results":"69","hashOfConfig":"59"},{"size":2309,"mtime":1611354518934,"results":"70","hashOfConfig":"59"},{"size":1780,"mtime":1611276492206,"results":"71","hashOfConfig":"59"},{"size":2274,"mtime":1611360455578,"results":"72","hashOfConfig":"59"},{"size":1473,"mtime":1611094858490,"results":"73","hashOfConfig":"59"},{"size":462,"mtime":1611094858513,"results":"74","hashOfConfig":"59"},{"size":1042,"mtime":1611094858511,"results":"75","hashOfConfig":"59"},{"size":982,"mtime":1611094858504,"results":"76","hashOfConfig":"59"},{"size":6897,"mtime":1611355540831,"results":"77","hashOfConfig":"59"},{"size":3768,"mtime":1611181708970,"results":"78","hashOfConfig":"59"},{"size":425,"mtime":1611094858586,"results":"79","hashOfConfig":"59"},{"size":313,"mtime":1611186041859,"results":"80","hashOfConfig":"59"},{"size":336,"mtime":1611094858220,"results":"81","hashOfConfig":"59"},{"size":811,"mtime":1611613379299,"results":"82","hashOfConfig":"59"},{"size":112,"mtime":1611094858253,"results":"83","hashOfConfig":"59"},{"size":1301,"mtime":1611094858561,"results":"84","hashOfConfig":"59"},{"size":688,"mtime":1611105433287,"results":"85","hashOfConfig":"59"},{"size":1330,"mtime":1611105734495,"results":"86","hashOfConfig":"59"},{"size":124,"mtime":1611105257047,"results":"87","hashOfConfig":"59"},{"size":233,"mtime":1611094858166,"results":"88","hashOfConfig":"59"},{"size":3111,"mtime":1611261423772,"results":"89","hashOfConfig":"59"},{"size":1241,"mtime":1611175973024,"results":"90","hashOfConfig":"59"},{"size":510,"mtime":1611452000844,"results":"91","hashOfConfig":"59"},{"size":1532,"mtime":1611265998385,"results":"92","hashOfConfig":"59"},{"size":2116,"mtime":1611102160553,"results":"93","hashOfConfig":"59"},{"size":943,"mtime":1611094858392,"results":"94","hashOfConfig":"59"},{"size":447,"mtime":1611094858232,"results":"95","hashOfConfig":"59"},{"size":4285,"mtime":1611356030017,"results":"96","hashOfConfig":"59"},{"size":1373,"mtime":1611177659474,"results":"97","hashOfConfig":"59"},{"size":107,"mtime":1611094858263,"results":"98","hashOfConfig":"59"},{"size":2751,"mtime":1611357393940,"results":"99","hashOfConfig":"59"},{"size":79,"mtime":1611192421523,"results":"100","hashOfConfig":"59"},{"size":338,"mtime":1611192348931,"results":"101","hashOfConfig":"59"},{"size":1280,"mtime":1611610786162,"results":"102","hashOfConfig":"59"},{"size":231,"mtime":1611094858225,"results":"103","hashOfConfig":"59"},{"size":1927,"mtime":1611534878890,"results":"104","hashOfConfig":"59"},{"size":1598,"mtime":1611522375233,"results":"105","hashOfConfig":"59"},{"size":3429,"mtime":1611522023225,"results":"106","hashOfConfig":"59"},{"size":506,"mtime":1611604203127,"results":"107","hashOfConfig":"59"},{"size":1460,"mtime":1611605324271,"results":"108","hashOfConfig":"59"},{"size":1242,"mtime":1611607639803,"results":"109","hashOfConfig":"59"},{"size":742,"mtime":1611604203084,"results":"110","hashOfConfig":"59"},{"size":1055,"mtime":1611604553824,"results":"111","hashOfConfig":"59"},{"size":2550,"mtime":1611604203085,"results":"112","hashOfConfig":"59"},{"size":2997,"mtime":1611605340516,"results":"113","hashOfConfig":"59"},{"size":2611,"mtime":1611607407094,"results":"114","hashOfConfig":"59"},{"size":3748,"mtime":1611618876880,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"ke513i",{"filePath":"119","messages":"120","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"136"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"136"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"136"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"136"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"136"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"136"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"136"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"136"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"136"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\index.js",[],["245","246"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\App.js",["247","248","249","250","251","252","253","254"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reportWebVitals.js",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\menu.components.js",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\admin.page.tsx",["255"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\home.page.tsx",[],["256","257"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\nav\\nav.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\htmlelement.utils.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\arrays.utils.ts",[],["258","259"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\valuetypetesting.utils.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\mongooseaxios.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\mongooseparser.utils.ts",["260"],"export interface IMongooseCollection { \r\n  accessor:string; \r\n  label:string; \r\n  fields: IMongooseField[]; \r\n  entries: IEntry[]; \r\n} \r\n\r\nexport interface IMongooseField { \r\n  path:string;  // accessor \r\n  instance:string; \r\n  validators: any; \r\n  options: { \r\n    ref?: string; \r\n    label?: string; \r\n    sortType?: string; \r\n    defaultValue?: any; \r\n    format?: string; \r\n    enum?: any[]; \r\n    abbrev?: boolean; \r\n    [key:string]:any; \r\n  }; \r\n  $embeddedSchemaType?:{ \r\n    instance:string; \r\n  }; \r\n  [key:string]:any; \r\n} \r\n\r\n\r\nexport function ParseCollection(model:any):ICollection { \r\n  const accessor = model['accessor']; \r\n  const label = model['label']; \r\n  const ifields = ParseFields(model['fields']); \r\n  const entries = model['entries']; \r\n  return {accessor, label, ifields, entries}; \r\n} \r\n\r\nexport function ParseFields(fields:any):IField[] { \r\n  const mongooseFields:IMongooseField[] = Object.keys(fields).map(f => fields[f]); \r\n  return mongooseFields.map(f=>ParseField(f)); \r\n} \r\n\r\n//async function ParseFields() \r\nexport function ParseField(field:IMongooseField):IField { \r\n  \r\n  const {path, instance, options, $embeddedSchemaType} = field; \r\n  /*if(path==='fId')\r\n    console.log(field); \r\n\r\n  if(path==='titles')\r\n    console.log(field); */\r\n\r\n  const ifield:IField = {} as IField; \r\n\r\n  ifield.accessor = path ?? ''; \r\n  ifield.label = options.label ?? ''; \r\n  ifield.options = options ?? {}; \r\n  ifield.type = options?.ref ?? $embeddedSchemaType?.instance ?? field.instance.toLowerCase(); \r\n  ifield.isMixed = instance.toLowerCase() === 'mixed'; \r\n  ifield.isEnum = !!options?.enum; \r\n  ifield.isArray = instance.toLowerCase() === 'array'; \r\n  ifield.isModel = !!options?.ref; \r\n  ifield.isAbbrev = !!options?.abbrev; \r\n\r\n  ifield.enums = options.enum ?? []; \r\n  ifield.format = options.format ?? \"${value}\"; \r\n  ifield.sort = options.sortType ?? ''; \r\n  ifield.defaultValue = GetDefaultValue(ifield.type, ifield.options); \r\n  \r\n  //ifield.validators = \r\n  return ifield; \r\n} \r\n\r\n\r\nfunction GetDefaultValue(type:string, options:any):any { \r\n  if(options['defaultValue']) \r\n    return options['defaultValue']; \r\n  if(options['default']) \r\n    return options['default']; \r\n  if(type === 'boolean') \r\n    return false; \r\n  if(type === 'number') \r\n    return 0; \r\n  return ''; \r\n} ","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\arrx\\arrx.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\objx\\objx.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\tablr\\cells.component.tsx",["261","262","263"],"import React, {useContext} from 'react'; \r\nimport {RowContext} from './rows.component'; \r\nimport {TablrContext} from './tablr.component'; \r\nimport {IsNull, GetDefaultValueFromIField, IsEmpty} from '../../_utils'; \r\n\r\n// CELLS ========================================\r\nconst CellsContext = React.createContext({}); \r\ninterface ICells{ ifields:IField[]; } \r\nexport function Cells({ifields, children}:React.PropsWithChildren<ICells>) { \r\n\r\n  // Render -------------------------------------\r\n  return <CellsContext.Provider value={{}} > \r\n    {ifields.map((ifield) => { \r\n      return <Cell key={ifield.accessor} {...{ifield}}>{children}</Cell>; \r\n    })} \r\n  </CellsContext.Provider> \r\n} \r\n\r\n\r\n// Row --------------------------------------------\r\ninterface ICell { ifield: IField; } \r\ninterface ICellContext { value:any, row:number, ifield:IField} \r\nexport const CellContext = React.createContext({} as ICellContext); \r\nexport function Cell({ifield, children}:React.PropsWithChildren<ICell>) { \r\n  const {datas} = useContext(TablrContext); \r\n  const {row} = useContext(RowContext); \r\n\r\n  const data = datas[row]; \r\n  const value = IsEmpty(data) ? GetDefaultValueFromIField(ifield): datas[row][ifield.accessor]; \r\n  const context = {value, row, ifield} as ICellContext; \r\n  \r\n  // RENDER -------------------------------------\r\n  return <CellContext.Provider value={context}> \r\n      <td>{!children && JSON.stringify(value) || children}</td> \r\n    </CellContext.Provider> \r\n} \r\n","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\tablr\\tablr.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\tablr\\rows.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\tablr\\headers.component.tsx",["264","265","266"],"import React, {useContext} from 'react'; \r\n\r\n\r\n// HEADER =======================================\r\ninterface IHeader {}\r\nexport function Header({children}:React.PropsWithChildren<IHeader>) { \r\n  return <thead> \r\n    <tr>{children}</tr> \r\n  </thead> \r\n} \r\n\r\n// HEADS ---------------------------------------\r\nconst HeadsContext = React.createContext({}); \r\nexport function Heads({ifields, children}:React.PropsWithChildren<{ ifields:IField[] }>) { \r\n\r\n  return <HeadsContext.Provider value={{}}> \r\n    {ifields.map( (ifield, key) => { \r\n      return <Head {...{key, ifield}}>{children}</Head>\r\n    })} \r\n  </HeadsContext.Provider> \r\n}\r\n\r\n// HEAD ---------------------------------------\r\nexport const HeadContext = React.createContext({} as {ifield:IField}); \r\nexport function Head({ifield, children}:React.PropsWithChildren<{ ifield:IField }>) { \r\n\r\n  return <HeadContext.Provider value={{ifield}}>\r\n    <th>{!children && ifield.label || children}</th>\r\n  </HeadContext.Provider>\r\n} \r\n","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\dao\\dao.class.ts",["267"],"import {IsEmpty} from '../_utils'; \r\n\r\nexport interface ICrud { \r\n  Collection:(accessor:string) => Promise<IResponse>; \r\n  Create: (accessor:string, toCreate?:IEntry|IEntry[]) => Promise<IResponse>; \r\n  Read: (accessor:string, id?:string[]) => Promise<IResponse>; \r\n  Update: (accessor:string, toUpdate:IEntry|IEntry[]) => Promise<IResponse>; \r\n  Delete: (accessor:string, toDelete?:IEntry|IEntry[]) => Promise<IResponse>; \r\n} \r\n\r\n// DataAcessObject ==============================\r\nexport class DataAccessObject { \r\n  public collections:Collections = new Collections(); \r\n\r\n  private crud:ICrud = {} as ICrud; \r\n  \r\n  constructor(crud:ICrud) { \r\n    this.crud = crud; \r\n  } \r\n\r\n  /*public GetCollections(accessors?:string[]):ICollection[] { \r\n    return this.collections.GetCollections(accessors); \r\n  } */\r\n\r\n  // COLLECTION .................................\r\n  public async Collections(accessors:string[]):Promise<IResponse[]> { \r\n    const responses = [] as IResponse[]; \r\n    for(let i=0; i<accessors.length; i++) { \r\n      const response = await this.Collection(accessors[i]); \r\n      responses.push(response); \r\n    } \r\n    return responses; \r\n  } \r\n\r\n  public async Collection(accessors:string):Promise<IResponse> { \r\n    const response = await this.crud.Collection(accessors); \r\n    if(response.success) \r\n      this.collections.collections.push(response.data); \r\n    return response; \r\n  }\r\n\r\n  // CREATE .....................................  \r\n  public async Create(accessor:string, entry:IEntry):Promise<IResponse> { \r\n    const [response] = (await this.crud.Create(accessor, entry)).data as IResponse[]; \r\n    if(response.success) { \r\n      console.log(response.data); \r\n      this.collections.Create(accessor, response.data); \r\n    }\r\n    return response; \r\n  } \r\n\r\n  // READ .......................................\r\n  public async Read(accessor:string, entry?:string[]):Promise<IEntry[]> { \r\n    //const results = (await crud.Read(accessor, [entry])).data as IResponse[]; \r\n    //const selectedCollection = this.GetCollection(accessor); \r\n    /*if(selectedCollection) \r\n      selectedCollection.Create(response.data); */ \r\n    return [] as IEntry[]; \r\n  } \r\n\r\n  // UPDATE .....................................\r\n  public async Update(accessor:string, entry:IEntry):Promise<IResponse> { \r\n    const [response] = (await this.crud.Update(accessor, [entry])).data as IResponse[]; \r\n    if(response.success) {\r\n      console.log(response.data); \r\n      this.collections.Update(accessor, response.data); \r\n    }\r\n    return response; \r\n  } \r\n\r\n  // DELETE .....................................\r\n  public async Delete(accessor:string, entry?:IEntry):Promise<IResponse> { \r\n    const [response] = (await this.crud.Delete(accessor, entry)).data as IResponse[]; \r\n    if(response.success) {\r\n      console.log(response.data); \r\n      this.collections.Delete(accessor, response.data); \r\n    }\r\n    return response; \r\n  } \r\n\r\n  // GET FOREIGN ELEMENTS -----------------------------\r\n  public GetForeignElements(ifield:IField) \r\n    : {foreignCollection:ICollection|undefined, abbrevField:IField|undefined} \r\n  { \r\n    return this.collections.GetForeignElements(ifield); \r\n  } \r\n\r\n  public GetForeignOptions(ifield:IField) : IOption[] { \r\n    const {foreignCollection, abbrevField} = this.GetForeignElements(ifield);\r\n    if(!foreignCollection || !abbrevField)\r\n      return [] as IOption[]; \r\n    return foreignCollection.entries?.map( e => { \r\n      return {value:e._id, label:e[abbrevField.accessor]} as IOption; \r\n    }); \r\n  } \r\n\r\n  public GetForeignValues(ifield:IField, ids:string[]):any[] { \r\n    const {foreignCollection, abbrevField} = this.GetForeignElements(ifield); \r\n    if(!ids || IsEmpty(ids)) \r\n      return []; \r\n    if(!foreignCollection || !abbrevField) \r\n      return [] as IOption[]; \r\n    return foreignCollection.entries\r\n      ?.filter(e => {\r\n        /*if(ifield.accessor === 'responseType')\r\n          console.log([ifield.accessor, ids]);*/\r\n        /*try{\r\n          ids.includes(e._id)\r\n        }catch(e){\r\n          \r\n        }*/\r\n        return ids.includes(e._id)\r\n      } )\r\n      ?.map( e => e[abbrevField.accessor] );\r\n  } \r\n} \r\n\r\n\r\n\r\n\r\n// Collections ===================================\r\nclass Collections { \r\n  public collections:ICollection[] = [] as ICollection[]; \r\n\r\n  public Create(accessor:string, entry:IEntry) { \r\n    const collection = new Collection(this.collections.find(c=> c.accessor===accessor)); \r\n    return collection.Create(entry);  \r\n  } \r\n\r\n  public Update(accessor:string, entry:IEntry) { \r\n    const collection = new Collection(this.collections.find(c=> c.accessor===accessor)); \r\n    return collection.Update(entry); \r\n  } \r\n\r\n  public Delete(accessor:string, entry:IEntry) {\r\n    const collection = new Collection(this.collections.find(c=> c.accessor===accessor)); \r\n    return collection.Delete(entry); \r\n  }\r\n  \r\n  // GET FOREIGN INFO -----------------------------\r\n  public GetForeignElements(ifield:IField) \r\n      :{foreignCollection:ICollection|undefined, abbrevField:IField|undefined} { \r\n    const foreignCollection = this.collections.find(c => c.accessor === ifield.type); \r\n    const abbrevField = new Collection(foreignCollection).GetAbbrevField(); \r\n    return {foreignCollection, abbrevField}; \r\n  }\r\n}\r\n\r\n\r\n\r\n// COLLECTION ===================================\r\nclass Collection { \r\n  public collection:ICollection|undefined; \r\n\r\n  constructor(collection:ICollection|undefined) { \r\n    if(collection) \r\n      this.collection = collection; \r\n  }\r\n\r\n  // Create -------------------------------------\r\n  public Create(entry:IEntry) { \r\n    if(!this.collection?.entries) \r\n      return false; \r\n    this.collection.entries.push(entry); \r\n    return true;\r\n  }\r\n\r\n  // Read ---------------------------------------\r\n  public Read(ids?:string[]) { \r\n    if(!this.collection?.entries) \r\n      return [];\r\n    if(IsEmpty(ids) ) \r\n      return this.collection.entries; \r\n    return this.collection.entries.filter(e => ids?.includes(e._id) ); \r\n  }\r\n\r\n  // Update \r\n  public Update(entry:IEntry) { \r\n    if(!this.collection?.entries) \r\n      return false; \r\n    const index = this.collection.entries?.findIndex( e => e._id === entry._id ); \r\n    if(index < 0) \r\n      return false; \r\n    this.collection.entries[index] = {...entry}; \r\n    return true; \r\n  }\r\n\r\n  // Delete\r\n  public Delete(entry:IEntry) {\r\n    if(!this.collection?.entries) \r\n      return false;\r\n    const index = this.collection?.entries.findIndex( e => e._id === entry._id ); \r\n    if(index < 0) \r\n      return false; \r\n    this.collection?.entries.splice(index, 1); \r\n    return true; \r\n  }\r\n\r\n  public GetAbbrevField():IField|undefined { \r\n    const abbrevField = this.collection?.ifields.find( f => f.isAbbrev) \r\n      ?? this.collection?.ifields.find( f => (f.type === 'string' || f.type === 'number') && !f.isArray); \r\n    return abbrevField; \r\n  } \r\n}\r\n\r\n\r\n","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\dao\\usedao.hook.ts",["268","269"],"import {useEffect, useMemo, useState} from 'react'; \r\nimport {useLoader, IState} from '../_useloader'; \r\nimport {DataAccessObject as IDao} from './dao.class'; \r\nimport {IsEmpty, GetDefaultValueFromIField} from '../_utils'; \r\n\r\n\r\n\r\nexport enum EActionType { \r\n  CREATE = 'create', \r\n  READ = 'read', \r\n  UPDATE = 'update', \r\n  DELETE = 'delete', \r\n}\r\n\r\n\r\nexport interface IUseDao{ \r\n  state:IState; \r\n\r\n  // Active Collection\r\n  activeCollection:ICollection; \r\n  setActiveCollection:React.Dispatch<ICollection>; \r\n\r\n  // Active Entry. \r\n  activeEntry:IEntry; \r\n  setActiveEntry:React.Dispatch<React.SetStateAction<IEntry>>; \r\n\r\n  // Active mode. \r\n  activeMode:EActionType; \r\n  SetActiveMode:(mode?:EActionType) => void; \r\n\r\n  // Get Entry id or return default entry\r\n  GetEntry:(id?:string) => IEntry; \r\n\r\n  // return local collections. \r\n  collections:() => ICollection[]; \r\n\r\n  // load remote collections. \r\n  Collections:(accessors:string[]) => Promise<void>; \r\n\r\n  // Crud functionalities. \r\n  Create: (accessor:string, toCreate:IEntry) => Promise<void>; \r\n  Read: (accessor:string, id?:string[]) => Promise<void>; \r\n  Update: (accessor:string, toUpdate:IEntry) => Promise<void>; \r\n  Delete: (accessor:string, toDelete?:IEntry) => Promise<void>; \r\n\r\n  // Get foreign elements, options and values. \r\n  GetForeignElements: (ifield:IField) => {foreignCollection:ICollection|undefined, abbrevField:IField|undefined}, \r\n  GetForeignOptions: (ifield:IField) => IOption[]; \r\n  GetForeignValues: (ifield:IField, value:any[]) => any[]; \r\n} \r\n\r\n\r\n//EActionType.\r\n\r\n\r\n// USE DAO ======================================\r\nexport function useDao(dao:IDao):IUseDao { \r\n  // Hooks \r\n  const Dao = useMemo(() => dao, []); \r\n  const {state, Load} = useLoader(); \r\n  const [activeCollection, setActiveCollection] = useState({} as ICollection); \r\n  const [activeEntry, setActiveEntry] = useState(InitActiveEntry()); \r\n  const [activeMode, setActiveMode] = useState(EActionType.READ); \r\n\r\n  const collections = () => Dao.collections.collections; \r\n  const Collections = async (accessors:string[]) => Load(() => Dao.Collections(accessors)); \r\n\r\n  // Crud functionalities\r\n  const Create = async (accessor:string, toCreate:IEntry) => Load(() => Dao.Create(accessor, toCreate)); \r\n  const Read = async (accessor:string, ids?:string[]) => Load(() => Dao.Read(accessor, ids)); \r\n  const Update = async (accessor:string, toUpdate:IEntry) => Load(() => Dao.Update(accessor, toUpdate)); \r\n  const Delete = async (accessor:string, toDelete?:IEntry) => Load(() => Dao.Delete(accessor, toDelete)); \r\n\r\n  const GetForeignElements = (ifield:IField) => Dao.GetForeignElements(ifield); \r\n  const GetForeignOptions = (ifield:IField) => Dao.GetForeignOptions(ifield); \r\n  const GetForeignValues = (ifield:IField, ids:any[]) => Dao.GetForeignValues(ifield, ids); \r\n\r\n  useEffect(() => { \r\n    setActiveEntry(InitActiveEntry()); \r\n    SetActiveMode(); \r\n  }, [activeCollection]); \r\n\r\n  function InitActiveEntry():IEntry { \r\n    if(IsEmpty(activeCollection)) \r\n      return {} as IEntry; \r\n    const {ifields} = activeCollection; \r\n    let entry = {} as IEntry; \r\n    ifields?.forEach( f => { \r\n      entry[f.accessor] = GetDefaultValueFromIField(f); \r\n    }); \r\n    return entry; \r\n  }\r\n\r\n  function GetEntry(id?:string) { \r\n    return activeCollection.entries.find( e => e._id === id) ?? InitActiveEntry(); \r\n  } \r\n\r\n  function SetActiveMode(mode?:EActionType) { \r\n    setActiveMode(mode?? EActionType.READ); \r\n  } \r\n\r\n  return {state, \r\n    activeCollection, setActiveCollection, \r\n    activeEntry, setActiveEntry, \r\n    activeMode, SetActiveMode, \r\n    GetEntry, \r\n    collections, Collections, \r\n    Create, Read, Update, Delete, \r\n    GetForeignElements, GetForeignOptions, GetForeignValues}; \r\n}\r\n\r\n","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\dao\\daocontexter.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_dao.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_mongooseparser.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_utils.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_useloader.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\customhooks\\useloader.hook.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\toggle\\toggle.component.tsx",[],["270","271"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\toggle\\usetoggle.hook.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_usetoggle.ts",[],["272","273"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_arrx.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\select\\select.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\select\\select.hook.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_input.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\input\\input.component.tsx",["274"],"import React from 'react'; \r\n//import CSS from ''\r\nimport {IEvent, IsNull, OnEnter, SetSize, SetWidth, \r\n  GetDefaultValueByType, GetTypeByValue, GetInputType, GetValueFromInput} from '../../_utils'; \r\n\r\n\r\n// INPUT ========================================\r\nexport interface IInput extends React.HTMLAttributes<HTMLInputElement> { \r\n  value:any; \r\n  setValue:any; \r\n  type?:string; \r\n  defaultValue?:any; \r\n  inputType?:string; \r\n  onEnterUp?:() => void; \r\n  width?: number; \r\n  [key:string]:any; \r\n} \r\nexport function Input(\r\n  {\r\n    value, setValue, \r\n    type=GetTypeByValue(value??''), \r\n    defaultValue=GetDefaultValueByType(type??'string'), \r\n    inputType=GetInputType(type??''), \r\n    onEnterUp=() => {}, \r\n    ...props\r\n  }:IInput) \r\n{ \r\n  const onChange = (event:IEvent) => setValue(GetInputValueOrDefault(event, defaultValue)); \r\n  const Value = IsNull(value) ? defaultValue: value; \r\n  const onKeyUp = (event: React.KeyboardEvent<HTMLInputElement>) => OnEnter(event, onEnterUp); \r\n\r\n  const width = props.width ?? SetSize(value); \r\n  const style = {width: `${width+2}ch`}; \r\n\r\n  if(type === 'boolean') \r\n    return <input {...{type:inputType, checked:Value, onChange, onKeyUp,  ...props}} /> \r\n  return <input {...{type:inputType, value:Value, onChange, onKeyUp, ...props}} style={style} /> \r\n} \r\n\r\n\r\n// GetValue --------------------------------------\r\nfunction GetInputValueOrDefault (event:IEvent, defaultValue:any) { \r\n  const value = GetValueFromInput(event); \r\n  return IsNull(value) ? defaultValue: value; \r\n}\r\n\r\n","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\inputarray\\inputarray.component.tsx",["275","276","277","278","279","280"],"import React, { useContext, useEffect, useState } from 'react'; \r\nimport {Arrx, ArrxContext, Elements, Element, ElementContext, ElementIndex, ElementValue} from '../../_arrx'; \r\nimport {Input} from '../../_input'; \r\nimport {IInputArray, IUseInputArray, useInputArray} from './inputarray.hook'; \r\n\r\n\r\nexport const InputArrayContext = React.createContext({} as IUseInputArray); \r\nexport function InputArray({...props}:React.PropsWithChildren<IInputArray>) { \r\n  const context = useInputArray(props); \r\n  const {values} = props; \r\n  \r\n  return <InputArrayContext.Provider value={context} > \r\n    <Arrx {...{values}} > \r\n      <Elements> \r\n        <UpdateElement/> <DeleteBtn/>\r\n        <br/> \r\n      </Elements> \r\n      <CreateElement/>\r\n    </Arrx> \r\n  </InputArrayContext.Provider> \r\n} \r\n\r\n\r\n// Create element =======================================\r\nfunction CreateElement() { \r\n  const {type, defaultValue, Create} = useContext(InputArrayContext); \r\n  const [value, setValue] = useState(defaultValue); \r\n\r\n  const onEnterUp = () => {\r\n    Create(value); \r\n    setValue(() => defaultValue); // reset input to defaultValue after creation. \r\n  }; \r\n  return <Input {...{value, setValue, defaultValue, type, onEnterUp}}  /> \r\n} \r\n\r\n// Update element =======================================\r\nfunction UpdateElement() { \r\n  const {values, type, defaultValue, Update} = useContext(InputArrayContext); \r\n  const {index} = useContext(ElementContext); \r\n\r\n  const [value, setValue] = useState(values[index]); \r\n  useEffect(() => { \r\n    setValue(values[index]); \r\n  }, [JSON.stringify(values[index])]); \r\n\r\n  const onEnterUp = () => Update(index, value); \r\n  return <Input {...{value, setValue, type, defaultValue, onEnterUp}} />\r\n}\r\n\r\n// Delete Btn ===================================\r\nexport function DeleteBtn({children, ...props}:React.PropsWithChildren<React.ButtonHTMLAttributes<HTMLButtonElement>>) { \r\n  const {Delete} = useContext(InputArrayContext); \r\n  const {index} = useContext(ElementContext); \r\n  return <button onClick={() => Delete(index)} {...props}> \r\n    {!children ? 'x' : children} \r\n  </button> \r\n}\r\n\r\n","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\inputarray\\inputarray.hook.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_tablr.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\rendering\\renderers.utils.tsx",[],["281","282"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\valuerenderer.component.tsx",["283","284","285","286","287","288","289"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_usepage.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\customhooks\\usepage.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_useupdate.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\customhooks\\useupdate.hook.tsx",["290","291"],"import {useEffect, useRef} from 'react'; \r\n\r\nexport function useUpdate(callback:() => void, changeling:any) { \r\n  const flagFirstRender = useRef(true); \r\n  \r\n  useEffect(() => { \r\n    if(flagFirstRender.current) { \r\n      flagFirstRender.current = false; \r\n      return; \r\n    } \r\n    callback(); \r\n  }, [JSON.stringify(changeling)]); \r\n}","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\patient.page.tsx",["292"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\_objx.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\reader\\reader.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\editor\\editor.component.tsx",["293"],"import React, { useEffect, useState } from 'react'; \r\nimport {Input, InputArray, Select} from '../../_input'; \r\nimport {GetDefaultValueFromIField, IsEmpty} from '../../_utils'; \r\nimport {useUpdate} from '../../_useupdate'; \r\n\r\n\r\n\r\n// Reader =======================================\r\ninterface IEditor{ \r\n  ifield:IField; \r\n  value:any; \r\n  setValue:React.Dispatch<any>; \r\n  options?:IOption[]; \r\n} \r\nexport function Editor({ ifield, value=GetDefaultValueFromIField(ifield), setValue, options}:IEditor) { \r\n  const {defaultValue, type} = ifield; \r\n  const _options = options ?? [] as IOption[]; \r\n  const [_value, _setValue] = useState(value); \r\n\r\n  // synchronize from parent value\r\n  useEffect(() => { \r\n    if(value !== _value) \r\n      _setValue(value); \r\n  }, [value]); \r\n\r\n  // synchronize to parent value \r\n  useUpdate(() => {setValue(_value)},_value); \r\n\r\n  // Edit Many\r\n  if(ifield.isArray) {\r\n    if(IsEmpty(options)) \r\n      return <InputArray {...{defaultValue, type, values:_value, setValues:_setValue}} /> \r\n    return <Select {...{value:_value, setValue:_setValue, options:_options, multiple:true}} /> \r\n  }\r\n  // Edit Mixed\r\n  if(ifield.isMixed) \r\n    return <EditMixed {...{ifield, value, setValue}} /> \r\n\r\n  // Edit One\r\n  if(IsEmpty(options)) \r\n    return <Input {...{value:_value, setValue:_setValue, type, defaultValue}} /> \r\n  return <Select {...{value:_value, setValue:_setValue, options:_options, multiple:false}} /> \r\n} \r\n\r\n\r\nfunction EditMixed ({ifield, value=GetDefaultValueFromIField(ifield), setValue, options}:IEditor) {\r\n  return <span>{JSON.stringify(value)}</span>\r\n}","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\experiments\\testReaderEditor.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\components\\collectionselector.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\components\\admintablr.component.tsx",["294","295","296"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\feedback\\feedback.component.tsx",["297"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\components\\paging.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\components\\linecrud.component.tsx",["298","299"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\components\\crudbtn.component.tsx",["300"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\components\\cellrenderer.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\components\\ramqidentitication.component.tsx",["301","302","303","304","305","306","307","308","309","310","311","312"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\components\\patientprofile.component.tsx",["313","314","315"],{"ruleId":"316","replacedBy":"317"},{"ruleId":"318","replacedBy":"319"},{"ruleId":"320","severity":1,"message":"321","line":1,"column":16,"nodeType":"322","messageId":"323","endLine":1,"endColumn":24},{"ruleId":"320","severity":1,"message":"324","line":1,"column":26,"nodeType":"322","messageId":"323","endLine":1,"endColumn":35},{"ruleId":"320","severity":1,"message":"325","line":1,"column":37,"nodeType":"322","messageId":"323","endLine":1,"endColumn":43},{"ruleId":"320","severity":1,"message":"326","line":2,"column":9,"nodeType":"322","messageId":"323","endLine":2,"endColumn":14},{"ruleId":"320","severity":1,"message":"327","line":4,"column":9,"nodeType":"322","messageId":"323","endLine":4,"endColumn":14},{"ruleId":"320","severity":1,"message":"328","line":6,"column":9,"nodeType":"322","messageId":"323","endLine":6,"endColumn":19},{"ruleId":"320","severity":1,"message":"329","line":7,"column":9,"nodeType":"322","messageId":"323","endLine":7,"endColumn":19},{"ruleId":"320","severity":1,"message":"330","line":7,"column":21,"nodeType":"322","messageId":"323","endLine":7,"endColumn":32},{"ruleId":"331","severity":1,"message":"332","line":22,"column":6,"nodeType":"333","endLine":22,"endColumn":8,"suggestions":"334"},{"ruleId":"316","replacedBy":"335"},{"ruleId":"318","replacedBy":"336"},{"ruleId":"316","replacedBy":"317"},{"ruleId":"318","replacedBy":"319"},{"ruleId":"337","severity":1,"message":"338","line":65,"column":37,"nodeType":"339","messageId":"340","endLine":65,"endColumn":47},{"ruleId":"341","severity":1,"message":"342","line":4,"column":9,"nodeType":"322","messageId":"323","endLine":4,"endColumn":15},{"ruleId":"343","severity":1,"message":"344","line":34,"column":22,"nodeType":"345","messageId":"346","endLine":34,"endColumn":24},{"ruleId":"343","severity":1,"message":"344","line":34,"column":47,"nodeType":"345","messageId":"346","endLine":34,"endColumn":49},{"ruleId":"341","severity":1,"message":"347","line":1,"column":16,"nodeType":"322","messageId":"323","endLine":1,"endColumn":26},{"ruleId":"343","severity":1,"message":"344","line":28,"column":20,"nodeType":"345","messageId":"346","endLine":28,"endColumn":22},{"ruleId":"343","severity":1,"message":"344","line":28,"column":36,"nodeType":"345","messageId":"346","endLine":28,"endColumn":38},{"ruleId":"348","severity":1,"message":"349","line":13,"column":40,"nodeType":"322","messageId":"350","endLine":13,"endColumn":51},{"ruleId":"331","severity":1,"message":"351","line":59,"column":34,"nodeType":"333","endLine":59,"endColumn":36,"suggestions":"352"},{"ruleId":"331","severity":1,"message":"353","line":81,"column":6,"nodeType":"333","endLine":81,"endColumn":24,"suggestions":"354"},{"ruleId":"316","replacedBy":"355"},{"ruleId":"318","replacedBy":"356"},{"ruleId":"316","replacedBy":"357"},{"ruleId":"318","replacedBy":"358"},{"ruleId":"341","severity":1,"message":"359","line":3,"column":43,"nodeType":"322","messageId":"323","endLine":3,"endColumn":51},{"ruleId":"341","severity":1,"message":"360","line":2,"column":15,"nodeType":"322","messageId":"323","endLine":2,"endColumn":26},{"ruleId":"341","severity":1,"message":"361","line":2,"column":38,"nodeType":"322","messageId":"323","endLine":2,"endColumn":45},{"ruleId":"341","severity":1,"message":"362","line":2,"column":63,"nodeType":"322","messageId":"323","endLine":2,"endColumn":75},{"ruleId":"341","severity":1,"message":"363","line":2,"column":77,"nodeType":"322","messageId":"323","endLine":2,"endColumn":89},{"ruleId":"331","severity":1,"message":"364","line":44,"column":6,"nodeType":"333","endLine":44,"endColumn":37,"suggestions":"365"},{"ruleId":"331","severity":1,"message":"366","line":44,"column":7,"nodeType":"367","endLine":44,"endColumn":36},{"ruleId":"316","replacedBy":"368"},{"ruleId":"318","replacedBy":"369"},{"ruleId":"341","severity":1,"message":"370","line":1,"column":21,"nodeType":"322","messageId":"323","endLine":1,"endColumn":28},{"ruleId":"341","severity":1,"message":"371","line":16,"column":16,"nodeType":"322","messageId":"323","endLine":16,"endColumn":23},{"ruleId":"331","severity":1,"message":"372","line":24,"column":6,"nodeType":"333","endLine":24,"endColumn":35,"suggestions":"373"},{"ruleId":"331","severity":1,"message":"366","line":24,"column":7,"nodeType":"367","endLine":24,"endColumn":34},{"ruleId":"341","severity":1,"message":"374","line":27,"column":9,"nodeType":"322","messageId":"323","endLine":27,"endColumn":19},{"ruleId":"331","severity":1,"message":"375","line":39,"column":6,"nodeType":"333","endLine":39,"endColumn":29,"suggestions":"376"},{"ruleId":"331","severity":1,"message":"366","line":39,"column":7,"nodeType":"367","endLine":39,"endColumn":28},{"ruleId":"331","severity":1,"message":"377","line":12,"column":6,"nodeType":"333","endLine":12,"endColumn":34,"suggestions":"378"},{"ruleId":"331","severity":1,"message":"366","line":12,"column":7,"nodeType":"367","endLine":12,"endColumn":33},{"ruleId":"331","severity":1,"message":"379","line":27,"column":6,"nodeType":"333","endLine":27,"endColumn":8,"suggestions":"380"},{"ruleId":"331","severity":1,"message":"381","line":24,"column":6,"nodeType":"333","endLine":24,"endColumn":13,"suggestions":"382"},{"ruleId":"341","severity":1,"message":"383","line":13,"column":41,"nodeType":"322","messageId":"323","endLine":13,"endColumn":59},{"ruleId":"341","severity":1,"message":"384","line":13,"column":61,"nodeType":"322","messageId":"323","endLine":13,"endColumn":78},{"ruleId":"341","severity":1,"message":"385","line":13,"column":80,"nodeType":"322","messageId":"323","endLine":13,"endColumn":96},{"ruleId":"341","severity":1,"message":"386","line":23,"column":31,"nodeType":"322","messageId":"323","endLine":23,"endColumn":35},{"ruleId":"341","severity":1,"message":"387","line":4,"column":20,"nodeType":"322","messageId":"323","endLine":4,"endColumn":30},{"ruleId":"341","severity":1,"message":"388","line":4,"column":45,"nodeType":"322","messageId":"323","endLine":4,"endColumn":56},{"ruleId":"389","severity":1,"message":"390","line":49,"column":10,"nodeType":"322","messageId":"391","endLine":49,"endColumn":17},{"ruleId":"341","severity":1,"message":"392","line":5,"column":9,"nodeType":"322","messageId":"323","endLine":5,"endColumn":13},{"ruleId":"341","severity":1,"message":"393","line":5,"column":15,"nodeType":"322","messageId":"323","endLine":5,"endColumn":26},{"ruleId":"341","severity":1,"message":"394","line":5,"column":28,"nodeType":"322","messageId":"323","endLine":5,"endColumn":34},{"ruleId":"341","severity":1,"message":"395","line":5,"column":36,"nodeType":"322","messageId":"323","endLine":5,"endColumn":41},{"ruleId":"341","severity":1,"message":"396","line":5,"column":43,"nodeType":"322","messageId":"323","endLine":5,"endColumn":55},{"ruleId":"341","severity":1,"message":"397","line":5,"column":57,"nodeType":"322","messageId":"323","endLine":5,"endColumn":67},{"ruleId":"341","severity":1,"message":"398","line":6,"column":9,"nodeType":"322","messageId":"323","endLine":6,"endColumn":15},{"ruleId":"341","severity":1,"message":"399","line":6,"column":17,"nodeType":"322","messageId":"323","endLine":6,"endColumn":23},{"ruleId":"341","severity":1,"message":"400","line":12,"column":10,"nodeType":"322","messageId":"323","endLine":12,"endColumn":21},{"ruleId":"341","severity":1,"message":"401","line":13,"column":19,"nodeType":"322","messageId":"323","endLine":13,"endColumn":26},{"ruleId":"341","severity":1,"message":"402","line":58,"column":10,"nodeType":"322","messageId":"323","endLine":58,"endColumn":23},{"ruleId":"331","severity":1,"message":"403","line":67,"column":6,"nodeType":"333","endLine":67,"endColumn":19,"suggestions":"404"},{"ruleId":"341","severity":1,"message":"393","line":5,"column":15,"nodeType":"322","messageId":"323","endLine":5,"endColumn":26},{"ruleId":"341","severity":1,"message":"405","line":6,"column":29,"nodeType":"322","messageId":"323","endLine":6,"endColumn":39},{"ruleId":"341","severity":1,"message":"398","line":7,"column":9,"nodeType":"322","messageId":"323","endLine":7,"endColumn":15},"no-native-reassign",["406"],"no-negated-in-lhs",["407"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useRef' is defined but never used.","'Admin' is defined but never used.","'Input' is defined but never used.","'TestSelect' is defined but never used.","'TestReader' is defined but never used.","'TestEditors' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Collections'. Either include it or remove the dependency array.","ArrayExpression",["408"],["406"],["407"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","@typescript-eslint/no-unused-vars","'IsNull' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'useContext' is defined but never used.","@typescript-eslint/no-use-before-define","'Collections' was used before it was defined.","noUseBeforeDefine","React Hook useMemo has a missing dependency: 'dao'. Either include it or remove the dependency array.",["409"],"React Hook useEffect has a missing dependency: 'InitActiveEntry'. Either include it or remove the dependency array.",["410"],["406"],["407"],["406"],["407"],"'SetWidth' is defined but never used.","'ArrxContext' is defined but never used.","'Element' is defined but never used.","'ElementIndex' is defined but never used.","'ElementValue' is defined but never used.","React Hook useEffect has missing dependencies: 'index' and 'values'. Either include them or remove the dependency array.",["411"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression",["406"],["407"],"'useMemo' is defined but never used.","'setData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.value'. Either include it or remove the dependency array. If 'setValue' needs the current value of 'props.value', you can also switch to useReducer instead of useState and read 'props.value' in the reducer.",["412"],"'hasChanged' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data', 'ifield.accessor', 'isEdit', and 'value'. Either include them or remove the dependency array.",["413"],"React Hook useEffect has a missing dependency: 'callback'. Either include it or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["414"],"React Hook useEffect has a missing dependency: 'GetPatient'. Either include it or remove the dependency array.",["415"],"React Hook useEffect has a missing dependency: '_value'. Either include it or remove the dependency array.",["416"],"'GetForeignElements' is assigned a value but never used.","'GetForeignOptions' is assigned a value but never used.","'GetForeignValues' is assigned a value but never used.","'data' is assigned a value but never used.","'RowContext' is defined but never used.","'CellContext' is defined but never used.","@typescript-eslint/no-redeclare","'CrudBtn' is already defined.","redeclared","'Objx' is defined but never used.","'ObjxContext' is defined but never used.","'Fields' is defined but never used.","'Field' is defined but never used.","'FieldContext' is defined but never used.","'FieldLabel' is defined but never used.","'Reader' is defined but never used.","'Editor' is defined but never used.","'activeEntry' is assigned a value but never used.","'ifields' is assigned a value but never used.","'ValueRenderer' is defined but never used.","React Hook useEffect has a missing dependency: 'value'. Either include it or remove the dependency array.",["417"],"'FieldValue' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"418","fix":"419"},{"desc":"420","fix":"421"},{"desc":"422","fix":"423"},{"desc":"424","fix":"425"},{"desc":"426","fix":"427"},{"desc":"428","fix":"429"},{"desc":"430","fix":"431"},{"desc":"432","fix":"433"},{"desc":"434","fix":"435"},{"desc":"436","fix":"437"},"Update the dependencies array to be: [Collections]",{"range":"438","text":"439"},"Update the dependencies array to be: [dao]",{"range":"440","text":"441"},"Update the dependencies array to be: [InitActiveEntry, activeCollection]",{"range":"442","text":"443"},"Update the dependencies array to be: [index, values]",{"range":"444","text":"445"},"Update the dependencies array to be: [props.value]",{"range":"446","text":"447"},"Update the dependencies array to be: [data, ifield.accessor, isEdit, value]",{"range":"448","text":"449"},"Update the dependencies array to be: [callback]",{"range":"450","text":"451"},"Update the dependencies array to be: [GetPatient]",{"range":"452","text":"453"},"Update the dependencies array to be: [_value, value]",{"range":"454","text":"455"},"Update the dependencies array to be: [props.value, value]",{"range":"456","text":"457"},[909,911],"[Collections]",[1703,1705],"[dao]",[2922,2940],"[InitActiveEntry, activeCollection]",[1560,1591],"[index, values]",[639,668],"[props.value]",[1108,1131],"[data, ifield.accessor, isEdit, value]",[304,332],"[callback]",[1065,1067],"[GetPatient]",[762,769],"[_value, value]",[2292,2305],"[props.value, value]"]