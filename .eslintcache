[{"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\index.js":"1","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\App.js":"2","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reportWebVitals.js":"3","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\menu.components.js":"4","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\admin.page.tsx":"5","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\home.page.tsx":"6","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\nav\\nav.component.tsx":"7","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\experiments.tsx":"8","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\_utils.ts":"9","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\htmlelement.utils.ts":"10","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\arrays.utils.ts":"11","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\valuetypetesting.utils.ts":"12","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\field\\field.class.ts":"13","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\_mongooseparser.ts":"14","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\mongooseaxios.ts":"15","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\crudaxios.ts":"16","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\mongooseparser.utils.ts":"17","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\patient.page.tsx":"18","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\components\\patientheader.component.tsx":"19","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\components\\patientidentifier.component.tsx":"20","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\components\\patientinfos.component.tsx":"21","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\components\\patientsloader.component.tsx":"22","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\questionnaire\\components\\questionnaireloader.component.tsx":"23","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\questionnaire\\components\\questionnaireforms.component.tsx":"24","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\questionnaire\\questionnairepage.page.tsx":"25","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\testArrx.tsx":"26","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\testarrx.tsx":"27","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\input\\_input.ts":"28","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\hooks\\useloader\\_useloader.ts":"29","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\arrx\\_arrx.ts":"30","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\objx\\_objx.ts":"31","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\hooks\\useloader\\useloader.hook.tsx":"32","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\input\\input\\input.component.tsx":"33","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\input\\inputarray\\inputarray.component.tsx":"34","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\input\\inputarray\\readarray.component.tsx":"35","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\input\\select\\select.component.tsx":"36","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\input\\select\\options.component.tsx":"37","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\arrx\\arrx.component.tsx":"38","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\objx\\objx.component.tsx":"39","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\input\\inputarray\\inputarray.hook.tsx":"40","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\input\\select\\selectheader.component.tsx":"41","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\input\\select\\select.hook.tsx":"42","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\input\\select\\RemovableItems.component.tsx":"43","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\testtablr.tsx":"44","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\tablr\\_tablr.ts":"45","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\tablr\\cells.component.tsx":"46","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\tablr\\tablr.component.tsx":"47","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\tablr\\rows.component.tsx":"48","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\tablr\\headers.component.tsx":"49","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\hooks\\usepage\\usePage.tsx":"50"},{"size":600,"mtime":1609529670659,"results":"51","hashOfConfig":"52"},{"size":437,"mtime":1610228259037,"results":"53","hashOfConfig":"52"},{"size":362,"mtime":499162500000,"results":"54","hashOfConfig":"52"},{"size":225,"mtime":1609475507334,"results":"55","hashOfConfig":"52"},{"size":119,"mtime":1609476074144,"results":"56","hashOfConfig":"52"},{"size":117,"mtime":1609476049273,"results":"57","hashOfConfig":"52"},{"size":496,"mtime":1609883323259,"results":"58","hashOfConfig":"52"},{"size":420,"mtime":1610223971491,"results":"59","hashOfConfig":"52"},{"size":693,"mtime":1610152063091,"results":"60","hashOfConfig":"52"},{"size":1432,"mtime":1610133369532,"results":"61","hashOfConfig":"52"},{"size":3330,"mtime":1609805687249,"results":"62","hashOfConfig":"52"},{"size":1698,"mtime":1610154963843,"results":"63","hashOfConfig":"52"},{"size":2351,"mtime":1609452679027,"results":"64","hashOfConfig":"52"},{"size":278,"mtime":1610227362484,"results":"65","hashOfConfig":"52"},{"size":1819,"mtime":1609452679070,"results":"66","hashOfConfig":"52"},{"size":1608,"mtime":1609452679069,"results":"67","hashOfConfig":"52"},{"size":2252,"mtime":1609452679073,"results":"68","hashOfConfig":"52"},{"size":2239,"mtime":1609979770974,"results":"69","hashOfConfig":"52"},{"size":222,"mtime":1609965015785,"results":"70","hashOfConfig":"52"},{"size":919,"mtime":1610159021625,"results":"71","hashOfConfig":"52"},{"size":1559,"mtime":1610228176480,"results":"72","hashOfConfig":"52"},{"size":1389,"mtime":1610159021729,"results":"73","hashOfConfig":"52"},{"size":1834,"mtime":1610230147763,"results":"74","hashOfConfig":"52"},{"size":6974,"mtime":1610231500404,"results":"75","hashOfConfig":"52"},{"size":1188,"mtime":1610230172532,"results":"76","hashOfConfig":"52"},{"size":2449,"mtime":1610062912048,"results":"77","hashOfConfig":"52"},{"size":2288,"mtime":1610229762594,"results":"78","hashOfConfig":"52"},{"size":643,"mtime":1609791814153,"results":"79","hashOfConfig":"52"},{"size":98,"mtime":1609788148795,"results":"80","hashOfConfig":"52"},{"size":217,"mtime":1610226352798,"results":"81","hashOfConfig":"52"},{"size":207,"mtime":1610161426383,"results":"82","hashOfConfig":"52"},{"size":1301,"mtime":1609804782791,"results":"83","hashOfConfig":"52"},{"size":1778,"mtime":1610159021625,"results":"84","hashOfConfig":"52"},{"size":2727,"mtime":1610159021626,"results":"85","hashOfConfig":"52"},{"size":489,"mtime":1609790785285,"results":"86","hashOfConfig":"52"},{"size":1569,"mtime":1610231171550,"results":"87","hashOfConfig":"52"},{"size":1025,"mtime":1609790418274,"results":"88","hashOfConfig":"52"},{"size":1734,"mtime":1610161028999,"results":"89","hashOfConfig":"52"},{"size":1992,"mtime":1610227775191,"results":"90","hashOfConfig":"52"},{"size":970,"mtime":1609787735783,"results":"91","hashOfConfig":"52"},{"size":977,"mtime":1610068539668,"results":"92","hashOfConfig":"52"},{"size":2177,"mtime":1610159021627,"results":"93","hashOfConfig":"52"},{"size":497,"mtime":1609787735852,"results":"94","hashOfConfig":"52"},{"size":3604,"mtime":1610227126371,"results":"95","hashOfConfig":"52"},{"size":379,"mtime":1610223339809,"results":"96","hashOfConfig":"52"},{"size":1529,"mtime":1610226206290,"results":"97","hashOfConfig":"52"},{"size":462,"mtime":1610223305599,"results":"98","hashOfConfig":"52"},{"size":1040,"mtime":1610223161129,"results":"99","hashOfConfig":"52"},{"size":982,"mtime":1610224559674,"results":"100","hashOfConfig":"52"},{"size":1708,"mtime":1610226535467,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"ke513i",{"filePath":"105","messages":"106","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"113"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"113"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"113"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"113"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"113"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"113"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"113"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"113"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"113"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\index.js",[],["213","214"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\App.js",["215","216","217","218","219","220"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reportWebVitals.js",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\menu.components.js",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\admin\\admin.page.tsx",[],["221","222"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\home.page.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\components\\nav\\nav.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\experiments.tsx",["223"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\_utils.ts",["224","225","226"],"import {Filter, Remove, ToArray, Union, Combine, Duplicates, Order, CommonPredicates} from './arrays.utils'; \r\nimport {SetSize, SetWidth, IEvent, IsPressEnter, OnEnter, GetInputType, GetValueFromInput} from './htmlelement.utils'; \r\nimport {Copy, Edit, Read, IsEmpty, IsNull, GetDefaultValueByType, GetTypeByValue} from './valuetypetesting.utils'; \r\nimport {Field} from './field/field.class'; \r\n\r\n\r\nexport {Filter, Remove, ToArray, Union, Combine, Duplicates, Order, CommonPredicates} \r\nexport {SetSize, SetWidth, IsPressEnter, OnEnter, GetInputType, GetValueFromInput} \r\nexport type {IEvent} \r\nexport {Copy, Edit, Read, IsEmpty, IsNull, GetDefaultValueByType, GetTypeByValue} \r\nexport {Field} ","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\htmlelement.utils.ts",["227"],"import React from 'react'; \r\nimport {IsNull} from './_utils'; \r\n\r\n// IEvent #####################################\r\nexport interface IEvent extends React.ChangeEvent<HTMLInputElement> { \r\n  code?:any, \r\n  [key:string]:any, \r\n} \r\n\r\nexport function OnEnter(event:any, Func:any) { \r\n  if(IsPressEnter( (event as IEvent).code ) ) \r\n    Func(); \r\n} \r\n\r\n\r\n\r\n// Get Value From Input -------------------------\r\nexport function GetValueFromInput(event:IEvent) { \r\n  const target = event.target; \r\n  const type = target.type; \r\n  if(type === 'number') \r\n    return target.valueAsNumber as number; \r\n  if(type === 'date') \r\n    return target.valueAsDate; \r\n  if(type === 'checkbox') \r\n    return target.checked as boolean; \r\n  return target.value; \r\n} \r\n\r\n\r\n// GetInputType ---------------------------------\r\nexport function GetInputType(type:string) { \r\n  if(type === 'number') \r\n    return 'number'; \r\n  if(type === 'boolean') \r\n    return 'checkbox'; \r\n  if(type === 'string') \r\n    return 'text'; \r\n  return 'text'; \r\n}\r\n\r\n\r\n// If Code is pressEnter\r\nexport function IsPressEnter(code:string = ''):boolean { \r\n  return code === 'Enter' || code === 'NumpadEnter'; \r\n} \r\n\r\n\r\n// TAG UTILS ###################################\r\nexport function SetWidth(value:number):{width:any} {\r\n  return {width:`${SetSize(value)+2}ch`}; \r\n}\r\n\r\nexport function SetSize(value:any):number { \r\n  const w = String(value).length; \r\n  return w < 5 ? 5 : w; \r\n} \r\n\r\n","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\arrays.utils.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\valuetypetesting.utils.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\utils\\field\\field.class.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\_mongooseparser.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\mongooseaxios.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\crudaxios.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\mongooseparser\\mongooseparser.utils.ts",["228"],"export interface IMongooseModel { \r\n  accessor:string; \r\n  label:string; \r\n  fields: IMongooseField[]; \r\n  entries: IEntry[]; \r\n} \r\n\r\nexport interface IMongooseField { \r\n  path:string;  // accessor \r\n  instance:string; \r\n  validators: any; \r\n  options: { \r\n    ref?: string; \r\n    label?: string; \r\n    sortType?: string; \r\n    defaultValue?: any; \r\n    format?: string; \r\n    [key:string]:any; \r\n  }; \r\n  $embeddedSchemaType?:{ \r\n    instance:string; \r\n  }; \r\n  [key:string]:any; \r\n} \r\n\r\n\r\nexport function ParseCollection(model:any):ICollection { \r\n  const accessor = model['accessor']; \r\n  const label = model['label']; \r\n  const ifields = ParseFields(model['fields']); \r\n  const entries = model['entries']; \r\n  return {accessor, label, ifields, entries}; \r\n} \r\n\r\nexport function ParseFields(fields:any):IField[] { \r\n  const mongooseFields:IMongooseField[] = Object.keys(fields).map(f => fields[f]); \r\n  return mongooseFields.map(f=>ParseField(f)); \r\n} \r\n\r\n//async function ParseFields() \r\nexport function ParseField(field:IMongooseField):IField { \r\n  const {path, instance, options} = field; \r\n  const ifield:IField = {} as IField; \r\n  ifield.accessor = path; \r\n  ifield.label = options.label ?? ''; \r\n  ifield.options = options; \r\n  ifield.type = GetType(field); \r\n  ifield.enums = options['enum'] ?? []; \r\n  ifield.format = options.format ?? \"${value}\"; \r\n  ifield.sort = options.sortType ?? ''; \r\n  ifield.defaultValue = GetDefaultValue(ifield.type, ifield.options); \r\n  \r\n  ifield.isEnum = options['enum']? true: false; \r\n  ifield.isArray = instance.toLowerCase() === 'array'; \r\n  ifield.isModel = instance.toLowerCase() === 'objectid'; \r\n  //ifield.isMixed = \r\n  //ifield.validators = \r\n  return ifield; \r\n} \r\n\r\nfunction GetType({instance, $embeddedSchemaType}:IMongooseField) { \r\n  if(instance.toLocaleLowerCase() === 'array') \r\n    return ($embeddedSchemaType?.instance ?? '').toLocaleLowerCase(); \r\n  return instance.toLocaleLowerCase(); \r\n} \r\n\r\nfunction GetDefaultValue(type:string, options:any):any { \r\n  if(options['defaultValue']) \r\n    return options['defaultValue']; \r\n  if(options['default']) \r\n    return options['default']; \r\n  if(type === 'boolean') \r\n    return false; \r\n  if(type === 'number') \r\n    return 0; \r\n  return ''; \r\n} ","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\patient.page.tsx",["229"],"import React, {useState} from 'react'; \r\nimport {CrudMongoose} from '../../reusable/mongooseparser/_mongooseparser'; \r\nimport {IsNull, IsEmpty} from '../../reusable/utils/_utils'; \r\n\r\nimport {PatientHeader} from './components/patientheader.component'; \r\nimport {PatientsLoader} from './components/patientsloader.component'; \r\nimport {PatientIdentifier} from './components/patientidentifier.component'; \r\nimport {PatientInfos} from './components/patientinfos.component'; \r\nimport QuestionnairePage from '../questionnaire/questionnairepage.page';\r\n\r\n/*import {QuestionnaireLoader} from './components/questionnaireloader.component'; \r\nimport {Questionnaire} from './components/questionnaire.component'; */\r\n\r\ninterface IPatientContext { \r\n  patients:ICollection; \r\n  setPatients:any; \r\n\r\n  patient:IEntry; \r\n  setPatient:any; \r\n\r\n  patientUpdated:boolean; \r\n  setPatientUpdated:any; \r\n} \r\n// PATIENT ======================================\r\nexport const PatientContext = React.createContext({} as IPatientContext); \r\nexport const CrudContext = React.createContext({} as {crud:CrudMongoose});\r\n\r\nexport default function Patient() { \r\n  const crud = new CrudMongoose(`https://fjg-mongoose-heroku.herokuapp.com/api/`); \r\n  const [patient, setPatient] = useState<IEntry>({} as IEntry); \r\n  const [patientUpdated, setPatientUpdated] = useState(false); \r\n  const [patients, setPatients] = useState({} as ICollection); \r\n  \r\n  const context = {crud, patients, setPatients, \r\n    patient, setPatient, \r\n    patientUpdated, setPatientUpdated} as IPatientContext; \r\n\r\n  if(!patientUpdated) \r\n    return <div> \r\n      <CrudContext.Provider value={{crud}} >\r\n        <PatientContext.Provider value={context} > \r\n          <PatientHeader /> \r\n          {IsEmpty(patients) && <PatientsLoader/>} \r\n          {!IsEmpty(patients) && IsEmpty(patient) && <PatientIdentifier/>} \r\n          {!IsEmpty(patients) && !IsEmpty(patient) && <PatientInfos/>} \r\n        </PatientContext.Provider> \r\n      </CrudContext.Provider>\r\n    </div> \r\n\r\n  return <div> \r\n    <CrudContext.Provider value={{crud}} >\r\n      <PatientContext.Provider value={context} > \r\n        <QuestionnairePage/> \r\n      </PatientContext.Provider> \r\n    </CrudContext.Provider>\r\n  </div>  \r\n} \r\n\r\n\r\n","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\components\\patientheader.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\components\\patientidentifier.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\components\\patientinfos.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\patient\\components\\patientsloader.component.tsx",["230"],"import {useContext, useEffect} from 'react'; \r\nimport {useLoader} from '../../../reusable/hooks/useloader/_useloader'; \r\n\r\nimport {CrudContext, PatientContext} from '../patient.page'; \r\n\r\n\r\n// PatientsCollectionLoader ===================== \r\nexport function PatientsLoader() { \r\n  const {crud} = useContext(CrudContext); \r\n  const {setPatients} = useContext(PatientContext); \r\n  const {state, Load} = useLoader(); \r\n\r\n  const loadfunc = async () => { \r\n    const response:IResponse = await crud.Collection('patients'); \r\n    if(response.success) \r\n      setPatients(() => response.data as ICollection); \r\n  }; \r\n\r\n  useEffect(() => {Load(loadfunc)}, []); \r\n\r\n\r\n  /* ?????? TO ADD IN USELOADER ??????\r\n  function Component(props) {\r\n    const [fetched, setFetched] = React.useState(false);\r\n    React.useEffect(() => {\r\n      const ac = new AbortController();\r\n      Promise.all([\r\n        fetch('http://placekitten.com/1000/1000', {signal: ac.signal}),\r\n        fetch('http://placekitten.com/2000/2000', {signal: ac.signal})\r\n      ]).then(() => setFetched(true))\r\n        .catch(ex => console.error(ex));\r\n      return () => ac.abort(); // Abort both fetches on unmount\r\n    }, []);\r\n    return fetched;\r\n  }\r\n  */\r\n\r\n  if(!state.ready) \r\n    return <div> Loading ... </div> \r\n  if(state.ready && !state.success) \r\n    return <div> Oh no! An error occured ... </div> \r\n  return null; \r\n} ","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\questionnaire\\components\\questionnaireloader.component.tsx",["231","232"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\questionnaire\\components\\questionnaireforms.component.tsx",["233","234","235"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\questionnaire\\questionnairepage.page.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\testArrx.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\testarrx.tsx",["236","237","238","239","240"],"import React, {useContext, useState} from 'react'; \r\nimport {Arrx, ArrxContext, Elements, Element, ElementContext, ElementIndex} from '../../reusable/components/arrx/_arrx'; \r\nimport {Objx, ObjxContext, Fields, Field, FieldContext, FieldLabel, FieldValue, ArrxObjx} from '../../reusable/components/objx/_objx'; \r\nimport {Input} from '../../reusable/components/input/_input'; \r\nimport {OnEnter} from '../../reusable/utils/_utils'; \r\nimport { ElementValue } from '../../reusable/components/arrx/arrx.component';\r\n\r\n\r\n\r\n// TEST ARRX ====================================\r\nexport function TestArrx() {\r\n  // Ifields\r\n  const ifield = {type:'', accessor:'', defaultValue:'', label:'', options:{}} as IField; \r\n  const ifields:IField[] = [ \r\n    {...ifield, type:'number', accessor:'a', label:'A : ', defaultValue:0}, \r\n    {...ifield, type:'string', accessor:'b', label:'B : ', defaultValue:''}, \r\n  ]; \r\n\r\n  // Data\r\n  const Datas = [\r\n    {a:12, b:'a'}, \r\n    {a:13, b:'b'}, \r\n    {a:14, b:'c'}, \r\n    {a:15, b:'d'}, \r\n    {a:16, b:'e'}, \r\n    {a:17, b:'f'}, \r\n    {a:18, b:'g'}, \r\n    {a:15, b:'h'}, \r\n    {a:16, b:'i'}, \r\n    {a:17, b:'j'}, \r\n    {a:18, b:'k'} \r\n  ]; \r\n\r\n  const [datas, setDatas] = useState(Datas); \r\n\r\n  return <div> \r\n    <Arrx {...{values:datas}} > \r\n      <Elements>\r\n        <ElementIndex/>\r\n        <ElementValue/>\r\n        <br/>\r\n      </Elements>\r\n    </Arrx>\r\n\r\n    \r\n    <Arrx {...{values:datas}} > \r\n      <Elements>\r\n        <ElementIndex />\r\n        <ArrxObjx {...{ifields}}> \r\n          <Fields>\r\n            [ <FieldLabel/> = <FieldValue/> ]\r\n            <FieldEdit {...{setValues:setDatas}}/>\r\n          </Fields>\r\n          <br/>\r\n        </ArrxObjx>\r\n      </Elements> \r\n    </Arrx>\r\n  </div>\r\n}\r\n\r\n\r\ninterface IFieldEdit {setValues:any}\r\nfunction FieldEdit({setValues}:IFieldEdit) { \r\n  const {values} = useContext(ArrxContext); \r\n  const {index} = useContext(ElementContext); \r\n  const {ifield} = useContext(FieldContext); \r\n\r\n  const [value, setValue] = useState(values[index][ifield.accessor]); \r\n  const {type, defaultValue} = ifield; \r\n  \r\n  const onEnterUp = () => { \r\n    setValues((prev:any) => { \r\n      const newElement = {...prev[index]}; \r\n      newElement[ifield.accessor] = value; \r\n      prev[index] = newElement; \r\n      return [...prev]; \r\n    }); \r\n  }\r\n\r\n  return <Input {...{value, setValue, type, defaultValue, onEnterUp}} />\r\n}","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\input\\_input.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\hooks\\useloader\\_useloader.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\arrx\\_arrx.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\objx\\_objx.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\hooks\\useloader\\useloader.hook.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\input\\input\\input.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\input\\inputarray\\inputarray.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\input\\inputarray\\readarray.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\input\\select\\select.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\input\\select\\options.component.tsx",["241"],"import React, {useContext, useEffect} from 'react'; \r\n//import {IOption} from '../../reusable/_input'; \r\nimport {SelectContext} from './select.component'; \r\n\r\n\r\n// OPTIONS ======================================\r\ninterface IOptions { \r\n  label?:string; // defines a optgroup with a label \r\n  options:IOption[]; \r\n  [key:string]:any; \r\n} \r\n//const OptionsContext = React.createContext({}); \r\nexport function Options({label, options}:IOptions) { \r\n  const {setOptions} = useContext(SelectContext); \r\n  \r\n  useEffect(() => { \r\n    setOptions( (prev:any) => [...prev, ...options] ); \r\n  }, []); \r\n\r\n  return <div > \r\n    {label ? (<div className={'select_body_label'}>{label}</div>) : null} \r\n    {options.map( (option,i) => { \r\n      return <Option key={i} option={option} /> \r\n    })} \r\n  </div> \r\n} \r\n\r\nfunction Option({option}:{option:IOption}) { \r\n  const {SelectValue} = useContext(SelectContext); \r\n  return <div className={'select_body_option'} onClick={() => SelectValue(option.value)}> \r\n    {option.label} \r\n  </div>\r\n}","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\arrx\\arrx.component.tsx",["242","243"],"import React, { useContext, useState } from 'react'; \r\nimport {Input} from '../../../reusable/components/input/_input'; \r\n\r\n\r\nexport interface IArrx { \r\n  values:any[]; \r\n} \r\n\r\nexport const ArrxContext = React.createContext({} as IArrx); \r\nconst ElementsContext = React.createContext({} as any); \r\nexport const ElementContext = React.createContext({} as {index:number}); \r\n\r\n// ARRX =========================================\r\nexport function Arrx({children, ...props}:React.PropsWithChildren<IArrx>) { \r\n  //const context:IUseArrx = useArrx(props); \r\n  return <ArrxContext.Provider value={props} > \r\n    {children}\r\n  </ArrxContext.Provider>\r\n}\r\n\r\n\r\n// ELEMENTS =====================================\r\nexport function Elements({indexes, children}:React.PropsWithChildren<{indexes?:number[]}>) { \r\n  const {values} = useContext(ArrxContext); \r\n  const elements = indexes ? indexes: values.map((v,i) => i ); \r\n\r\n  return <ElementsContext.Provider value={{}}> \r\n    {elements.map( (index:any) => { \r\n      return <Element key={index} {...{index}}>{children}</Element> \r\n    })} \r\n    </ElementsContext.Provider> \r\n}\r\n\r\n\r\n// ELEMENT ======================================\r\nexport function Element({index, children}:React.PropsWithChildren<{index:number}>) {\r\n  return <ElementContext.Provider key={index} value={{index}}> \r\n    {children} \r\n  </ElementContext.Provider> \r\n}\r\n\r\n\r\n// Typical Component ============================\r\nexport function ElementIndex() { \r\n  const {index} = useContext(ElementContext); \r\n  return <span>{index}. </span> \r\n}\r\n\r\nexport function ElementValue() {\r\n  const {values} = useContext(ArrxContext); \r\n  const {index} = useContext(ElementContext); \r\n  return <span>{JSON.stringify(values[index])}. </span> \r\n}","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\objx\\objx.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\input\\inputarray\\inputarray.hook.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\input\\select\\selectheader.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\input\\select\\select.hook.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\input\\select\\RemovableItems.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\pages\\experiments\\testtablr.tsx",["244","245","246","247","248","249","250","251","252"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\tablr\\_tablr.ts",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\tablr\\cells.component.tsx",["253","254","255"],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\tablr\\tablr.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\tablr\\rows.component.tsx",[],"D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\components\\tablr\\headers.component.tsx",["256","257","258"],"import React, {useContext} from 'react'; \r\n\r\n\r\n// HEADER =======================================\r\ninterface IHeader {}\r\nexport function Header({children}:React.PropsWithChildren<IHeader>) { \r\n  return <thead> \r\n    <tr>{children}</tr> \r\n  </thead> \r\n} \r\n\r\n// HEADS ---------------------------------------\r\nconst HeadsContext = React.createContext({}); \r\nexport function Heads({ifields, children}:React.PropsWithChildren<{ ifields:IField[] }>) { \r\n\r\n  return <HeadsContext.Provider value={{}}> \r\n    {ifields.map( (ifield, key) => { \r\n      return <Head {...{key, ifield}}>{children}</Head>\r\n    })} \r\n  </HeadsContext.Provider> \r\n}\r\n\r\n// HEAD ---------------------------------------\r\nexport const HeadContext = React.createContext({} as {ifield:IField}); \r\nexport function Head({ifield, children}:React.PropsWithChildren<{ ifield:IField }>) { \r\n\r\n  return <HeadContext.Provider value={{ifield}}>\r\n    <th>{!children && ifield.label || children}</th>\r\n  </HeadContext.Provider>\r\n} \r\n","D:\\01-Projects\\02-FullStacks\\01-React-Mongoose\\react-mongoose-demo\\src\\reusable\\hooks\\usepage\\usePage.tsx",[],{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","severity":1,"message":"264","line":2,"column":9,"nodeType":"265","messageId":"266","endLine":2,"endColumn":15},{"ruleId":"263","severity":1,"message":"267","line":2,"column":17,"nodeType":"265","messageId":"266","endLine":2,"endColumn":22},{"ruleId":"263","severity":1,"message":"268","line":3,"column":8,"nodeType":"265","messageId":"266","endLine":3,"endColumn":11},{"ruleId":"263","severity":1,"message":"269","line":4,"column":8,"nodeType":"265","messageId":"266","endLine":4,"endColumn":12},{"ruleId":"263","severity":1,"message":"270","line":6,"column":8,"nodeType":"265","messageId":"266","endLine":6,"endColumn":13},{"ruleId":"263","severity":1,"message":"271","line":7,"column":8,"nodeType":"265","messageId":"266","endLine":7,"endColumn":19},{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","replacedBy":"262"},{"ruleId":"272","severity":1,"message":"273","line":2,"column":9,"nodeType":"265","messageId":"266","endLine":2,"endColumn":17},{"ruleId":"272","severity":1,"message":"274","line":3,"column":9,"nodeType":"265","messageId":"266","endLine":3,"endColumn":13},{"ruleId":"272","severity":1,"message":"275","line":3,"column":15,"nodeType":"265","messageId":"266","endLine":3,"endColumn":19},{"ruleId":"272","severity":1,"message":"276","line":3,"column":21,"nodeType":"265","messageId":"266","endLine":3,"endColumn":25},{"ruleId":"272","severity":1,"message":"277","line":2,"column":9,"nodeType":"265","messageId":"266","endLine":2,"endColumn":15},{"ruleId":"278","severity":1,"message":"279","line":49,"column":37,"nodeType":"280","messageId":"281","endLine":49,"endColumn":47},{"ruleId":"272","severity":1,"message":"277","line":3,"column":9,"nodeType":"265","messageId":"266","endLine":3,"endColumn":15},{"ruleId":"282","severity":1,"message":"283","line":19,"column":37,"nodeType":"284","endLine":19,"endColumn":39,"suggestions":"285"},{"ruleId":"272","severity":1,"message":"286","line":12,"column":38,"nodeType":"265","messageId":"266","endLine":12,"endColumn":48},{"ruleId":"282","severity":1,"message":"283","line":30,"column":37,"nodeType":"284","endLine":30,"endColumn":39,"suggestions":"287"},{"ruleId":"272","severity":1,"message":"288","line":3,"column":33,"nodeType":"265","messageId":"266","endLine":3,"endColumn":43},{"ruleId":"272","severity":1,"message":"289","line":4,"column":9,"nodeType":"265","messageId":"266","endLine":4,"endColumn":20},{"ruleId":"272","severity":1,"message":"290","line":35,"column":18,"nodeType":"265","messageId":"266","endLine":35,"endColumn":26},{"ruleId":"272","severity":1,"message":"291","line":2,"column":38,"nodeType":"265","messageId":"266","endLine":2,"endColumn":45},{"ruleId":"272","severity":1,"message":"292","line":3,"column":9,"nodeType":"265","messageId":"266","endLine":3,"endColumn":13},{"ruleId":"272","severity":1,"message":"293","line":3,"column":15,"nodeType":"265","messageId":"266","endLine":3,"endColumn":26},{"ruleId":"272","severity":1,"message":"294","line":3,"column":36,"nodeType":"265","messageId":"266","endLine":3,"endColumn":41},{"ruleId":"272","severity":1,"message":"295","line":5,"column":9,"nodeType":"265","messageId":"266","endLine":5,"endColumn":16},{"ruleId":"282","severity":1,"message":"296","line":18,"column":6,"nodeType":"284","endLine":18,"endColumn":8,"suggestions":"297"},{"ruleId":"272","severity":1,"message":"298","line":1,"column":29,"nodeType":"265","messageId":"266","endLine":1,"endColumn":37},{"ruleId":"272","severity":1,"message":"299","line":2,"column":9,"nodeType":"265","messageId":"266","endLine":2,"endColumn":14},{"ruleId":"272","severity":1,"message":"300","line":2,"column":16,"nodeType":"265","messageId":"266","endLine":2,"endColumn":28},{"ruleId":"272","severity":1,"message":"301","line":3,"column":9,"nodeType":"265","messageId":"266","endLine":3,"endColumn":12},{"ruleId":"272","severity":1,"message":"302","line":3,"column":14,"nodeType":"265","messageId":"266","endLine":3,"endColumn":24},{"ruleId":"272","severity":1,"message":"303","line":4,"column":10,"nodeType":"265","messageId":"266","endLine":4,"endColumn":14},{"ruleId":"272","severity":1,"message":"304","line":5,"column":18,"nodeType":"265","messageId":"266","endLine":5,"endColumn":22},{"ruleId":"272","severity":1,"message":"305","line":5,"column":24,"nodeType":"265","messageId":"266","endLine":5,"endColumn":35},{"ruleId":"272","severity":1,"message":"306","line":8,"column":15,"nodeType":"265","messageId":"266","endLine":8,"endColumn":26},{"ruleId":"272","severity":1,"message":"291","line":9,"column":13,"nodeType":"265","messageId":"266","endLine":9,"endColumn":20},{"ruleId":"272","severity":1,"message":"307","line":10,"column":3,"nodeType":"265","messageId":"266","endLine":10,"endColumn":17},{"ruleId":"272","severity":1,"message":"277","line":4,"column":9,"nodeType":"265","messageId":"266","endLine":4,"endColumn":15},{"ruleId":"308","severity":1,"message":"309","line":33,"column":22,"nodeType":"310","messageId":"311","endLine":33,"endColumn":24},{"ruleId":"308","severity":1,"message":"309","line":33,"column":47,"nodeType":"310","messageId":"311","endLine":33,"endColumn":49},{"ruleId":"272","severity":1,"message":"312","line":1,"column":16,"nodeType":"265","messageId":"266","endLine":1,"endColumn":26},{"ruleId":"308","severity":1,"message":"309","line":28,"column":20,"nodeType":"310","messageId":"311","endLine":28,"endColumn":22},{"ruleId":"308","severity":1,"message":"309","line":28,"column":36,"nodeType":"310","messageId":"311","endLine":28,"endColumn":38},"no-native-reassign",["313"],"no-negated-in-lhs",["314"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Nav' is defined but never used.","'Home' is defined but never used.","'Admin' is defined but never used.","'Experiments' is defined but never used.","@typescript-eslint/no-unused-vars","'TestArrx' is defined but never used.","'Copy' is defined but never used.","'Edit' is defined but never used.","'Read' is defined but never used.","'IsNull' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Load' and 'loadfunc'. Either include them or remove the dependency array.","ArrayExpression",["315"],"'setAnswers' is assigned a value but never used.",["316"],"'InputArray' is defined but never used.","'CrudContext' is defined but never used.","'optional' is assigned a value but never used.","'Element' is defined but never used.","'Objx' is defined but never used.","'ObjxContext' is defined but never used.","'Field' is defined but never used.","'OnEnter' is defined but never used.","React Hook useEffect has missing dependencies: 'options' and 'setOptions'. Either include them or remove the dependency array.",["317"],"'useState' is defined but never used.","'Input' is defined but never used.","'TablrContext' is defined but never used.","'Row' is defined but never used.","'RowContext' is defined but never used.","'Cell' is defined but never used.","'Head' is defined but never used.","'HeadContext' is defined but never used.","'ArrxContext' is defined but never used.","'ElementContext' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'useContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"318","fix":"319"},{"desc":"318","fix":"320"},{"desc":"321","fix":"322"},"Update the dependencies array to be: [Load, loadfunc]",{"range":"323","text":"324"},{"range":"325","text":"324"},"Update the dependencies array to be: [options, setOptions]",{"range":"326","text":"327"},[650,652],"[Load, loadfunc]",[1095,1097],[585,587],"[options, setOptions]"]